// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Cvt_YCrCb_to_RGB (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state49 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_reg_967;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter45;
reg   [0:0] ap_reg_pp0_iter44_exitcond_reg_967;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg   [10:0] j_reg_168;
wire   [0:0] exitcond1_fu_292_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_2_fu_298_p2;
reg   [10:0] i_2_reg_962;
wire   [0:0] exitcond_fu_304_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
wire    ap_block_state34_pp0_stage0_iter31;
wire    ap_block_state35_pp0_stage0_iter32;
wire    ap_block_state36_pp0_stage0_iter33;
wire    ap_block_state37_pp0_stage0_iter34;
wire    ap_block_state38_pp0_stage0_iter35;
wire    ap_block_state39_pp0_stage0_iter36;
wire    ap_block_state40_pp0_stage0_iter37;
wire    ap_block_state41_pp0_stage0_iter38;
wire    ap_block_state42_pp0_stage0_iter39;
wire    ap_block_state43_pp0_stage0_iter40;
wire    ap_block_state44_pp0_stage0_iter41;
wire    ap_block_state45_pp0_stage0_iter42;
wire    ap_block_state46_pp0_stage0_iter43;
wire    ap_block_state47_pp0_stage0_iter44;
reg    ap_block_state48_pp0_stage0_iter45;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter2_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter3_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter4_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter5_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter6_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter7_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter8_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter9_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter10_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter11_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter12_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter13_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter14_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter15_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter16_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter17_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter18_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter19_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter20_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter21_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter22_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter23_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter24_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter25_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter26_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter27_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter28_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter29_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter30_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter31_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter32_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter33_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter34_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter35_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter36_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter37_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter38_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter39_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter40_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter41_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter42_exitcond_reg_967;
reg   [0:0] ap_reg_pp0_iter43_exitcond_reg_967;
wire   [10:0] j_1_fu_310_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_83_reg_976;
reg   [7:0] tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter2_tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter3_tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter4_tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter5_tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter6_tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter7_tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter8_tmp_84_reg_981;
reg   [7:0] ap_reg_pp0_iter9_tmp_84_reg_981;
reg   [7:0] tmp_62_reg_986;
wire   [31:0] grp_fu_194_p1;
reg   [31:0] y_reg_1001;
wire   [31:0] grp_fu_197_p1;
reg   [31:0] v_reg_1006;
wire   [31:0] grp_fu_179_p2;
reg   [31:0] tmp_s_reg_1016;
wire   [31:0] grp_fu_184_p2;
reg   [31:0] tmp_9_reg_1021;
wire   [31:0] grp_fu_200_p1;
reg   [31:0] u_reg_1026;
wire   [63:0] tmp_3_fu_212_p1;
reg   [63:0] tmp_3_reg_1031;
wire   [63:0] tmp_12_fu_215_p1;
reg   [63:0] tmp_12_reg_1036;
wire   [63:0] grp_fu_267_p2;
reg   [63:0] tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter23_tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter24_tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter25_tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter26_tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter27_tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter28_tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter29_tmp_4_reg_1042;
reg   [63:0] ap_reg_pp0_iter30_tmp_4_reg_1042;
wire   [31:0] grp_fu_189_p2;
reg   [31:0] tmp_5_reg_1049;
wire   [63:0] grp_fu_272_p2;
reg   [63:0] tmp_13_reg_1054;
wire   [63:0] grp_fu_277_p2;
reg   [63:0] tmp_20_reg_1059;
wire   [63:0] tmp_6_fu_218_p1;
reg   [63:0] tmp_6_reg_1064;
wire   [63:0] grp_fu_282_p2;
reg   [63:0] tmp_7_reg_1070;
wire   [63:0] grp_fu_251_p2;
reg   [63:0] tmp_17_reg_1075;
wire   [63:0] grp_fu_287_p2;
reg   [63:0] tmp_18_reg_1080;
wire   [63:0] grp_fu_255_p2;
reg   [63:0] tmp_21_reg_1085;
wire   [31:0] b_fu_203_p1;
reg   [31:0] b_reg_1090;
reg   [31:0] ap_reg_pp0_iter32_b_reg_1090;
wire   [0:0] tmp_42_fu_221_p2;
reg   [0:0] tmp_42_reg_1097;
wire   [31:0] b_1_fu_368_p3;
reg   [31:0] b_1_reg_1102;
reg   [31:0] ap_reg_pp0_iter34_b_1_reg_1102;
wire   [0:0] tmp_46_fu_226_p2;
reg   [0:0] tmp_46_reg_1108;
reg   [7:0] loc_V_5_reg_1113;
wire   [22:0] loc_V_6_fu_433_p1;
reg   [22:0] loc_V_6_reg_1119;
wire   [7:0] p_Val2_19_fu_530_p3;
reg   [7:0] p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter37_p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter38_p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter39_p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter40_p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter41_p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter42_p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter43_p_Val2_19_reg_1124;
reg   [7:0] ap_reg_pp0_iter44_p_Val2_19_reg_1124;
wire   [63:0] grp_fu_259_p2;
reg   [63:0] tmp_8_reg_1129;
wire   [63:0] grp_fu_263_p2;
reg   [63:0] tmp_19_reg_1134;
wire   [31:0] r_fu_206_p1;
reg   [31:0] r_reg_1139;
reg   [31:0] ap_reg_pp0_iter40_r_reg_1139;
wire   [31:0] g_fu_209_p1;
reg   [31:0] g_reg_1146;
reg   [31:0] ap_reg_pp0_iter40_g_reg_1146;
wire   [0:0] tmp_26_fu_231_p2;
reg   [0:0] tmp_26_reg_1153;
wire   [0:0] tmp_34_fu_236_p2;
reg   [0:0] tmp_34_reg_1158;
wire   [31:0] r_1_fu_578_p3;
reg   [31:0] r_1_reg_1163;
reg   [31:0] ap_reg_pp0_iter42_r_1_reg_1163;
wire   [31:0] g_1_fu_625_p3;
reg   [31:0] g_1_reg_1169;
reg   [31:0] ap_reg_pp0_iter42_g_1_reg_1169;
wire   [0:0] tmp_30_fu_241_p2;
reg   [0:0] tmp_30_reg_1175;
wire   [0:0] tmp_38_fu_246_p2;
reg   [0:0] tmp_38_reg_1180;
reg   [7:0] loc_V_reg_1185;
wire   [22:0] loc_V_2_fu_730_p1;
reg   [22:0] loc_V_2_reg_1191;
reg   [7:0] loc_V_3_reg_1196;
wire   [22:0] loc_V_4_fu_752_p1;
reg   [22:0] loc_V_4_reg_1202;
wire   [7:0] p_Val2_17_fu_849_p3;
reg   [7:0] p_Val2_17_reg_1207;
wire   [7:0] p_Val2_18_fu_950_p3;
reg   [7:0] p_Val2_18_reg_1212;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg   [10:0] i_reg_157;
reg    ap_block_state1;
wire    ap_CS_fsm_state49;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_194_p0;
wire   [31:0] grp_fu_197_p0;
wire   [31:0] grp_fu_200_p0;
wire   [31:0] b_to_int_fu_328_p1;
wire   [7:0] tmp_40_fu_331_p4;
wire   [22:0] tmp_69_fu_341_p1;
wire   [0:0] notrhs5_fu_351_p2;
wire   [0:0] notlhs4_fu_345_p2;
wire   [0:0] tmp_41_fu_357_p2;
wire   [0:0] tmp_43_fu_363_p2;
wire   [31:0] b_1_to_int_fu_375_p1;
wire   [7:0] tmp_44_fu_378_p4;
wire   [22:0] tmp_70_fu_388_p1;
wire   [0:0] notrhs6_fu_398_p2;
wire   [0:0] notlhs5_fu_392_p2;
wire   [0:0] tmp_45_fu_404_p2;
wire   [0:0] tmp_47_fu_410_p2;
wire   [31:0] p_Val2_13_fu_415_p3;
wire   [24:0] tmp_38_i_i_i2_fu_437_p4;
wire   [8:0] tmp_i_i_i_i86_cast_fu_450_p1;
wire   [8:0] sh_assign_4_fu_453_p2;
wire   [7:0] tmp_39_i_i_i2_fu_467_p2;
wire   [0:0] isNeg_2_fu_459_p3;
wire  signed [8:0] tmp_39_i_i_i89_cast_fu_472_p1;
wire   [8:0] sh_assign_5_fu_476_p3;
wire  signed [31:0] sh_assign_1_i_i_i90_s_fu_484_p1;
wire  signed [24:0] sh_assign_1_i_i_i90_1_fu_488_p1;
wire   [54:0] tmp_38_i_i_i85_cast1_fu_446_p1;
wire   [54:0] tmp_40_i_i_i2_fu_492_p1;
wire   [24:0] tmp_41_i_i_i2_fu_496_p2;
wire   [0:0] tmp_79_fu_508_p3;
wire   [54:0] tmp_42_i_i_i2_fu_502_p2;
wire   [7:0] tmp_52_fu_516_p1;
wire   [7:0] tmp_53_fu_520_p4;
wire   [31:0] r_to_int_fu_538_p1;
wire   [7:0] tmp_24_fu_541_p4;
wire   [22:0] tmp_65_fu_551_p1;
wire   [0:0] notrhs_fu_561_p2;
wire   [0:0] notlhs_fu_555_p2;
wire   [0:0] tmp_25_fu_567_p2;
wire   [0:0] tmp_27_fu_573_p2;
wire   [31:0] g_to_int_fu_585_p1;
wire   [7:0] tmp_32_fu_588_p4;
wire   [22:0] tmp_67_fu_598_p1;
wire   [0:0] notrhs3_fu_608_p2;
wire   [0:0] notlhs2_fu_602_p2;
wire   [0:0] tmp_33_fu_614_p2;
wire   [0:0] tmp_35_fu_620_p2;
wire   [31:0] r_1_to_int_fu_632_p1;
wire   [7:0] tmp_28_fu_635_p4;
wire   [22:0] tmp_66_fu_645_p1;
wire   [0:0] notrhs2_fu_655_p2;
wire   [0:0] notlhs9_fu_649_p2;
wire   [0:0] tmp_29_fu_661_p2;
wire   [31:0] g_1_to_int_fu_672_p1;
wire   [7:0] tmp_36_fu_675_p4;
wire   [22:0] tmp_68_fu_685_p1;
wire   [0:0] notrhs4_fu_695_p2;
wire   [0:0] notlhs3_fu_689_p2;
wire   [0:0] tmp_37_fu_701_p2;
wire   [0:0] tmp_31_fu_667_p2;
wire   [31:0] p_Val2_s_fu_712_p3;
wire   [0:0] tmp_39_fu_707_p2;
wire   [31:0] p_Val2_9_fu_734_p3;
wire   [24:0] tmp_38_i_i_i_fu_756_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_769_p1;
wire   [8:0] sh_assign_fu_772_p2;
wire   [7:0] tmp_39_i_i_i_fu_786_p2;
wire   [0:0] isNeg_fu_778_p3;
wire  signed [8:0] tmp_39_i_i_i_cast_fu_791_p1;
wire   [8:0] sh_assign_1_fu_795_p3;
wire  signed [31:0] sh_assign_1_i_i_i_ca_fu_803_p1;
wire  signed [24:0] sh_assign_1_i_i_i_ca_1_fu_807_p1;
wire   [54:0] tmp_38_i_i_i_cast1_fu_765_p1;
wire   [54:0] tmp_40_i_i_i_fu_811_p1;
wire   [24:0] tmp_41_i_i_i_fu_815_p2;
wire   [0:0] tmp_73_fu_827_p3;
wire   [54:0] tmp_42_i_i_i_fu_821_p2;
wire   [7:0] tmp_48_fu_835_p1;
wire   [7:0] tmp_49_fu_839_p4;
wire   [24:0] tmp_38_i_i_i1_fu_857_p4;
wire   [8:0] tmp_i_i_i_i69_cast_fu_870_p1;
wire   [8:0] sh_assign_2_fu_873_p2;
wire   [7:0] tmp_39_i_i_i1_fu_887_p2;
wire   [0:0] isNeg_1_fu_879_p3;
wire  signed [8:0] tmp_39_i_i_i72_cast_fu_892_p1;
wire   [8:0] sh_assign_3_fu_896_p3;
wire  signed [31:0] sh_assign_1_i_i_i73_s_fu_904_p1;
wire  signed [24:0] sh_assign_1_i_i_i73_1_fu_908_p1;
wire   [54:0] tmp_38_i_i_i68_cast1_fu_866_p1;
wire   [54:0] tmp_40_i_i_i1_fu_912_p1;
wire   [24:0] tmp_41_i_i_i1_fu_916_p2;
wire   [0:0] tmp_76_fu_928_p3;
wire   [54:0] tmp_42_i_i_i1_fu_922_p2;
wire   [7:0] tmp_50_fu_936_p1;
wire   [7:0] tmp_51_fu_940_p4;
reg    grp_fu_179_ce;
reg    grp_fu_184_ce;
reg    grp_fu_189_ce;
reg    grp_fu_194_ce;
reg    grp_fu_197_ce;
reg    grp_fu_200_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_251_ce;
reg    grp_fu_255_ce;
reg    grp_fu_259_ce;
reg    grp_fu_263_ce;
reg    grp_fu_267_ce;
reg    grp_fu_272_ce;
reg    grp_fu_277_ce;
reg    grp_fu_282_ce;
reg    grp_fu_287_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
end

contrastadj_fadd_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_fadd_pcA_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_reg_1001),
    .din1(32'd3246391296),
    .ce(grp_fu_179_ce),
    .dout(grp_fu_179_p2)
);

contrastadj_fadd_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_fadd_pcA_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_reg_1006),
    .din1(32'd3271557120),
    .ce(grp_fu_184_ce),
    .dout(grp_fu_184_p2)
);

contrastadj_fadd_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_fadd_pcA_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(u_reg_1026),
    .din1(32'd3271557120),
    .ce(grp_fu_189_ce),
    .dout(grp_fu_189_p2)
);

contrastadj_uitofqcK #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_uitofqcK_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_194_p0),
    .ce(grp_fu_194_ce),
    .dout(grp_fu_194_p1)
);

contrastadj_uitofqcK #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_uitofqcK_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_197_p0),
    .ce(grp_fu_197_ce),
    .dout(grp_fu_197_p1)
);

contrastadj_uitofqcK #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
contrastadj_uitofqcK_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_200_p0),
    .ce(grp_fu_200_ce),
    .dout(grp_fu_200_p1)
);

contrastadj_fptruhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
contrastadj_fptruhbi_U66(
    .din0(tmp_21_reg_1085),
    .dout(b_fu_203_p1)
);

contrastadj_fptruhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
contrastadj_fptruhbi_U67(
    .din0(tmp_8_reg_1129),
    .dout(r_fu_206_p1)
);

contrastadj_fptruhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
contrastadj_fptruhbi_U68(
    .din0(tmp_19_reg_1134),
    .dout(g_fu_209_p1)
);

contrastadj_fpextibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
contrastadj_fpextibs_U69(
    .din0(tmp_s_reg_1016),
    .dout(tmp_3_fu_212_p1)
);

contrastadj_fpextibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
contrastadj_fpextibs_U70(
    .din0(tmp_9_reg_1021),
    .dout(tmp_12_fu_215_p1)
);

contrastadj_fpextibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
contrastadj_fpextibs_U71(
    .din0(tmp_5_reg_1049),
    .dout(tmp_6_fu_218_p1)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U72(
    .din0(b_reg_1090),
    .din1(32'd1132396544),
    .opcode(5'd2),
    .dout(tmp_42_fu_221_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U73(
    .din0(b_1_reg_1102),
    .din1(32'd0),
    .opcode(5'd4),
    .dout(tmp_46_fu_226_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U74(
    .din0(r_reg_1139),
    .din1(32'd1132396544),
    .opcode(5'd2),
    .dout(tmp_26_fu_231_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U75(
    .din0(g_reg_1146),
    .din1(32'd1132396544),
    .opcode(5'd2),
    .dout(tmp_34_fu_236_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U76(
    .din0(r_1_reg_1163),
    .din1(32'd0),
    .opcode(5'd4),
    .dout(tmp_30_fu_241_p2)
);

contrastadj_fcmp_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
contrastadj_fcmp_jbC_U77(
    .din0(g_1_reg_1169),
    .din1(32'd0),
    .opcode(5'd4),
    .dout(tmp_38_fu_246_p2)
);

contrastadj_dsub_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dsub_rcU_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1042),
    .din1(tmp_13_reg_1054),
    .ce(grp_fu_251_ce),
    .dout(grp_fu_251_p2)
);

contrastadj_dadd_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dadd_kbM_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_4_reg_1042),
    .din1(tmp_20_reg_1059),
    .ce(grp_fu_255_ce),
    .dout(grp_fu_255_p2)
);

contrastadj_dadd_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dadd_kbM_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_reg_pp0_iter30_tmp_4_reg_1042),
    .din1(tmp_7_reg_1070),
    .ce(grp_fu_259_ce),
    .dout(grp_fu_259_p2)
);

contrastadj_dsub_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dsub_rcU_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_17_reg_1075),
    .din1(tmp_18_reg_1080),
    .ce(grp_fu_263_ce),
    .dout(grp_fu_263_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_1031),
    .din1(64'd4607921009138906169),
    .ce(grp_fu_267_ce),
    .dout(grp_fu_267_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_12_reg_1036),
    .din1(64'd4605498072539380842),
    .ce(grp_fu_272_ce),
    .dout(grp_fu_272_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_12_reg_1036),
    .din1(64'd4609866564177930224),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1064),
    .din1(64'd4611726550824034238),
    .ce(grp_fu_282_ce),
    .dout(grp_fu_282_p2)
);

contrastadj_dmul_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
contrastadj_dmul_lbW_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_reg_1064),
    .din1(64'd4600715249735113376),
    .ce(grp_fu_287_ce),
    .dout(grp_fu_287_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond1_fu_292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond1_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end else if (((exitcond1_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter45 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i_reg_157 <= i_2_reg_962;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_157 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_reg_168 <= j_1_fu_310_p2;
    end else if (((exitcond1_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_168 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_reg_967 <= ap_reg_pp0_iter9_exitcond_reg_967;
        ap_reg_pp0_iter11_exitcond_reg_967 <= ap_reg_pp0_iter10_exitcond_reg_967;
        ap_reg_pp0_iter12_exitcond_reg_967 <= ap_reg_pp0_iter11_exitcond_reg_967;
        ap_reg_pp0_iter13_exitcond_reg_967 <= ap_reg_pp0_iter12_exitcond_reg_967;
        ap_reg_pp0_iter14_exitcond_reg_967 <= ap_reg_pp0_iter13_exitcond_reg_967;
        ap_reg_pp0_iter15_exitcond_reg_967 <= ap_reg_pp0_iter14_exitcond_reg_967;
        ap_reg_pp0_iter16_exitcond_reg_967 <= ap_reg_pp0_iter15_exitcond_reg_967;
        ap_reg_pp0_iter17_exitcond_reg_967 <= ap_reg_pp0_iter16_exitcond_reg_967;
        ap_reg_pp0_iter18_exitcond_reg_967 <= ap_reg_pp0_iter17_exitcond_reg_967;
        ap_reg_pp0_iter19_exitcond_reg_967 <= ap_reg_pp0_iter18_exitcond_reg_967;
        ap_reg_pp0_iter20_exitcond_reg_967 <= ap_reg_pp0_iter19_exitcond_reg_967;
        ap_reg_pp0_iter21_exitcond_reg_967 <= ap_reg_pp0_iter20_exitcond_reg_967;
        ap_reg_pp0_iter22_exitcond_reg_967 <= ap_reg_pp0_iter21_exitcond_reg_967;
        ap_reg_pp0_iter23_exitcond_reg_967 <= ap_reg_pp0_iter22_exitcond_reg_967;
        ap_reg_pp0_iter23_tmp_4_reg_1042 <= tmp_4_reg_1042;
        ap_reg_pp0_iter24_exitcond_reg_967 <= ap_reg_pp0_iter23_exitcond_reg_967;
        ap_reg_pp0_iter24_tmp_4_reg_1042 <= ap_reg_pp0_iter23_tmp_4_reg_1042;
        ap_reg_pp0_iter25_exitcond_reg_967 <= ap_reg_pp0_iter24_exitcond_reg_967;
        ap_reg_pp0_iter25_tmp_4_reg_1042 <= ap_reg_pp0_iter24_tmp_4_reg_1042;
        ap_reg_pp0_iter26_exitcond_reg_967 <= ap_reg_pp0_iter25_exitcond_reg_967;
        ap_reg_pp0_iter26_tmp_4_reg_1042 <= ap_reg_pp0_iter25_tmp_4_reg_1042;
        ap_reg_pp0_iter27_exitcond_reg_967 <= ap_reg_pp0_iter26_exitcond_reg_967;
        ap_reg_pp0_iter27_tmp_4_reg_1042 <= ap_reg_pp0_iter26_tmp_4_reg_1042;
        ap_reg_pp0_iter28_exitcond_reg_967 <= ap_reg_pp0_iter27_exitcond_reg_967;
        ap_reg_pp0_iter28_tmp_4_reg_1042 <= ap_reg_pp0_iter27_tmp_4_reg_1042;
        ap_reg_pp0_iter29_exitcond_reg_967 <= ap_reg_pp0_iter28_exitcond_reg_967;
        ap_reg_pp0_iter29_tmp_4_reg_1042 <= ap_reg_pp0_iter28_tmp_4_reg_1042;
        ap_reg_pp0_iter2_exitcond_reg_967 <= ap_reg_pp0_iter1_exitcond_reg_967;
        ap_reg_pp0_iter2_tmp_84_reg_981 <= tmp_84_reg_981;
        ap_reg_pp0_iter30_exitcond_reg_967 <= ap_reg_pp0_iter29_exitcond_reg_967;
        ap_reg_pp0_iter30_tmp_4_reg_1042 <= ap_reg_pp0_iter29_tmp_4_reg_1042;
        ap_reg_pp0_iter31_exitcond_reg_967 <= ap_reg_pp0_iter30_exitcond_reg_967;
        ap_reg_pp0_iter32_b_reg_1090 <= b_reg_1090;
        ap_reg_pp0_iter32_exitcond_reg_967 <= ap_reg_pp0_iter31_exitcond_reg_967;
        ap_reg_pp0_iter33_exitcond_reg_967 <= ap_reg_pp0_iter32_exitcond_reg_967;
        ap_reg_pp0_iter34_b_1_reg_1102 <= b_1_reg_1102;
        ap_reg_pp0_iter34_exitcond_reg_967 <= ap_reg_pp0_iter33_exitcond_reg_967;
        ap_reg_pp0_iter35_exitcond_reg_967 <= ap_reg_pp0_iter34_exitcond_reg_967;
        ap_reg_pp0_iter36_exitcond_reg_967 <= ap_reg_pp0_iter35_exitcond_reg_967;
        ap_reg_pp0_iter37_exitcond_reg_967 <= ap_reg_pp0_iter36_exitcond_reg_967;
        ap_reg_pp0_iter37_p_Val2_19_reg_1124 <= p_Val2_19_reg_1124;
        ap_reg_pp0_iter38_exitcond_reg_967 <= ap_reg_pp0_iter37_exitcond_reg_967;
        ap_reg_pp0_iter38_p_Val2_19_reg_1124 <= ap_reg_pp0_iter37_p_Val2_19_reg_1124;
        ap_reg_pp0_iter39_exitcond_reg_967 <= ap_reg_pp0_iter38_exitcond_reg_967;
        ap_reg_pp0_iter39_p_Val2_19_reg_1124 <= ap_reg_pp0_iter38_p_Val2_19_reg_1124;
        ap_reg_pp0_iter3_exitcond_reg_967 <= ap_reg_pp0_iter2_exitcond_reg_967;
        ap_reg_pp0_iter3_tmp_84_reg_981 <= ap_reg_pp0_iter2_tmp_84_reg_981;
        ap_reg_pp0_iter40_exitcond_reg_967 <= ap_reg_pp0_iter39_exitcond_reg_967;
        ap_reg_pp0_iter40_g_reg_1146 <= g_reg_1146;
        ap_reg_pp0_iter40_p_Val2_19_reg_1124 <= ap_reg_pp0_iter39_p_Val2_19_reg_1124;
        ap_reg_pp0_iter40_r_reg_1139 <= r_reg_1139;
        ap_reg_pp0_iter41_exitcond_reg_967 <= ap_reg_pp0_iter40_exitcond_reg_967;
        ap_reg_pp0_iter41_p_Val2_19_reg_1124 <= ap_reg_pp0_iter40_p_Val2_19_reg_1124;
        ap_reg_pp0_iter42_exitcond_reg_967 <= ap_reg_pp0_iter41_exitcond_reg_967;
        ap_reg_pp0_iter42_g_1_reg_1169 <= g_1_reg_1169;
        ap_reg_pp0_iter42_p_Val2_19_reg_1124 <= ap_reg_pp0_iter41_p_Val2_19_reg_1124;
        ap_reg_pp0_iter42_r_1_reg_1163 <= r_1_reg_1163;
        ap_reg_pp0_iter43_exitcond_reg_967 <= ap_reg_pp0_iter42_exitcond_reg_967;
        ap_reg_pp0_iter43_p_Val2_19_reg_1124 <= ap_reg_pp0_iter42_p_Val2_19_reg_1124;
        ap_reg_pp0_iter44_exitcond_reg_967 <= ap_reg_pp0_iter43_exitcond_reg_967;
        ap_reg_pp0_iter44_p_Val2_19_reg_1124 <= ap_reg_pp0_iter43_p_Val2_19_reg_1124;
        ap_reg_pp0_iter4_exitcond_reg_967 <= ap_reg_pp0_iter3_exitcond_reg_967;
        ap_reg_pp0_iter4_tmp_84_reg_981 <= ap_reg_pp0_iter3_tmp_84_reg_981;
        ap_reg_pp0_iter5_exitcond_reg_967 <= ap_reg_pp0_iter4_exitcond_reg_967;
        ap_reg_pp0_iter5_tmp_84_reg_981 <= ap_reg_pp0_iter4_tmp_84_reg_981;
        ap_reg_pp0_iter6_exitcond_reg_967 <= ap_reg_pp0_iter5_exitcond_reg_967;
        ap_reg_pp0_iter6_tmp_84_reg_981 <= ap_reg_pp0_iter5_tmp_84_reg_981;
        ap_reg_pp0_iter7_exitcond_reg_967 <= ap_reg_pp0_iter6_exitcond_reg_967;
        ap_reg_pp0_iter7_tmp_84_reg_981 <= ap_reg_pp0_iter6_tmp_84_reg_981;
        ap_reg_pp0_iter8_exitcond_reg_967 <= ap_reg_pp0_iter7_exitcond_reg_967;
        ap_reg_pp0_iter8_tmp_84_reg_981 <= ap_reg_pp0_iter7_tmp_84_reg_981;
        ap_reg_pp0_iter9_exitcond_reg_967 <= ap_reg_pp0_iter8_exitcond_reg_967;
        ap_reg_pp0_iter9_tmp_84_reg_981 <= ap_reg_pp0_iter8_tmp_84_reg_981;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_reg_967 <= exitcond_reg_967;
        exitcond_reg_967 <= exitcond_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter32_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_1_reg_1102 <= b_1_fu_368_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter30_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_reg_1090 <= b_fu_203_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter40_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        g_1_reg_1169 <= g_1_fu_625_p3;
        r_1_reg_1163 <= r_1_fu_578_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter38_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        g_reg_1146 <= g_fu_209_p1;
        r_reg_1139 <= r_fu_206_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_962 <= i_2_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter42_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        loc_V_2_reg_1191 <= loc_V_2_fu_730_p1;
        loc_V_3_reg_1196 <= {{p_Val2_9_fu_734_p3[30:23]}};
        loc_V_4_reg_1202 <= loc_V_4_fu_752_p1;
        loc_V_reg_1185 <= {{p_Val2_s_fu_712_p3[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter34_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        loc_V_5_reg_1113 <= {{p_Val2_13_fu_415_p3[30:23]}};
        loc_V_6_reg_1119 <= loc_V_6_fu_433_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter43_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_17_reg_1207 <= p_Val2_17_fu_849_p3;
        p_Val2_18_reg_1212 <= p_Val2_18_fu_950_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter35_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_19_reg_1124 <= p_Val2_19_fu_530_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter14_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_1036 <= tmp_12_fu_215_p1;
        tmp_3_reg_1031 <= tmp_3_fu_212_p1;
        u_reg_1026 <= grp_fu_200_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter21_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_13_reg_1054 <= grp_fu_272_p2;
        tmp_20_reg_1059 <= grp_fu_277_p2;
        tmp_4_reg_1042 <= grp_fu_267_p2;
        tmp_5_reg_1049 <= grp_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter29_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_17_reg_1075 <= grp_fu_251_p2;
        tmp_18_reg_1080 <= grp_fu_287_p2;
        tmp_21_reg_1085 <= grp_fu_255_p2;
        tmp_7_reg_1070 <= grp_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter37_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_19_reg_1134 <= grp_fu_263_p2;
        tmp_8_reg_1129 <= grp_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter39_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_26_reg_1153 <= tmp_26_fu_231_p2;
        tmp_34_reg_1158 <= tmp_34_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter41_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_30_reg_1175 <= tmp_30_fu_241_p2;
        tmp_38_reg_1180 <= tmp_38_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter31_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_42_reg_1097 <= tmp_42_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter33_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_46_reg_1108 <= tmp_46_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_967 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_62_reg_986 <= p_src_data_stream_2_V_dout;
        tmp_83_reg_976 <= p_src_data_stream_0_V_dout;
        tmp_84_reg_981 <= p_src_data_stream_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter22_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_6_reg_1064 <= tmp_6_fu_218_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter13_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_9_reg_1021 <= grp_fu_184_p2;
        tmp_s_reg_1016 <= grp_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v_reg_1006 <= grp_fu_197_p1;
        y_reg_1001 <= grp_fu_194_p1;
    end
end

always @ (*) begin
    if ((exitcond_fu_304_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_179_ce = 1'b1;
    end else begin
        grp_fu_179_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_184_ce = 1'b1;
    end else begin
        grp_fu_184_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_189_ce = 1'b1;
    end else begin
        grp_fu_189_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_194_ce = 1'b1;
    end else begin
        grp_fu_194_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_197_ce = 1'b1;
    end else begin
        grp_fu_197_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_200_ce = 1'b1;
    end else begin
        grp_fu_200_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_251_ce = 1'b1;
    end else begin
        grp_fu_251_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_255_ce = 1'b1;
    end else begin
        grp_fu_255_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_259_ce = 1'b1;
    end else begin
        grp_fu_259_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_263_ce = 1'b1;
    end else begin
        grp_fu_263_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_267_ce = 1'b1;
    end else begin
        grp_fu_267_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_272_ce = 1'b1;
    end else begin
        grp_fu_272_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_282_ce = 1'b1;
    end else begin
        grp_fu_282_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_287_ce = 1'b1;
    end else begin
        grp_fu_287_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (ap_enable_reg_pp0_iter45 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (ap_enable_reg_pp0_iter45 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter45 == 1'b1))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (ap_enable_reg_pp0_iter45 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_967 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_967 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_967 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_967 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_304_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter44 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter45 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter44 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter45 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_304_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((ap_enable_reg_pp0_iter45 == 1'b1) & (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_967 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter45 == 1'b1) & (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_967 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter45 == 1'b1) & (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_967 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter45 == 1'b1) & (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_reg_967 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state48_pp0_stage0_iter45 = (((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((ap_reg_pp0_iter44_exitcond_reg_967 == 1'd0) & (p_dst_data_stream_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_reg_967 == 1'd0) & (p_src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_reg_967 == 1'd0) & (p_src_data_stream_0_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign b_1_fu_368_p3 = ((tmp_43_fu_363_p2[0:0] === 1'b1) ? 32'd1132396544 : ap_reg_pp0_iter32_b_reg_1090);

assign b_1_to_int_fu_375_p1 = ap_reg_pp0_iter34_b_1_reg_1102;

assign b_to_int_fu_328_p1 = ap_reg_pp0_iter32_b_reg_1090;

assign exitcond1_fu_292_p2 = ((i_reg_157 == 11'd1080) ? 1'b1 : 1'b0);

assign exitcond_fu_304_p2 = ((j_reg_168 == 11'd1920) ? 1'b1 : 1'b0);

assign g_1_fu_625_p3 = ((tmp_35_fu_620_p2[0:0] === 1'b1) ? 32'd1132396544 : ap_reg_pp0_iter40_g_reg_1146);

assign g_1_to_int_fu_672_p1 = ap_reg_pp0_iter42_g_1_reg_1169;

assign g_to_int_fu_585_p1 = ap_reg_pp0_iter40_g_reg_1146;

assign grp_fu_194_p0 = tmp_83_reg_976;

assign grp_fu_197_p0 = tmp_62_reg_986;

assign grp_fu_200_p0 = ap_reg_pp0_iter9_tmp_84_reg_981;

assign i_2_fu_298_p2 = (i_reg_157 + 11'd1);

assign isNeg_1_fu_879_p3 = sh_assign_2_fu_873_p2[32'd8];

assign isNeg_2_fu_459_p3 = sh_assign_4_fu_453_p2[32'd8];

assign isNeg_fu_778_p3 = sh_assign_fu_772_p2[32'd8];

assign j_1_fu_310_p2 = (j_reg_168 + 11'd1);

assign loc_V_2_fu_730_p1 = p_Val2_s_fu_712_p3[22:0];

assign loc_V_4_fu_752_p1 = p_Val2_9_fu_734_p3[22:0];

assign loc_V_6_fu_433_p1 = p_Val2_13_fu_415_p3[22:0];

assign notlhs2_fu_602_p2 = ((tmp_32_fu_588_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_689_p2 = ((tmp_36_fu_675_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_345_p2 = ((tmp_40_fu_331_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_392_p2 = ((tmp_44_fu_378_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs9_fu_649_p2 = ((tmp_28_fu_635_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_555_p2 = ((tmp_24_fu_541_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs2_fu_655_p2 = ((tmp_66_fu_645_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_608_p2 = ((tmp_67_fu_598_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_695_p2 = ((tmp_68_fu_685_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_351_p2 = ((tmp_69_fu_341_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_398_p2 = ((tmp_70_fu_388_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_561_p2 = ((tmp_65_fu_551_p1 == 23'd0) ? 1'b1 : 1'b0);

assign p_Val2_13_fu_415_p3 = ((tmp_47_fu_410_p2[0:0] === 1'b1) ? 32'd0 : b_1_to_int_fu_375_p1);

assign p_Val2_17_fu_849_p3 = ((isNeg_fu_778_p3[0:0] === 1'b1) ? tmp_48_fu_835_p1 : tmp_49_fu_839_p4);

assign p_Val2_18_fu_950_p3 = ((isNeg_1_fu_879_p3[0:0] === 1'b1) ? tmp_50_fu_936_p1 : tmp_51_fu_940_p4);

assign p_Val2_19_fu_530_p3 = ((isNeg_2_fu_459_p3[0:0] === 1'b1) ? tmp_52_fu_516_p1 : tmp_53_fu_520_p4);

assign p_Val2_9_fu_734_p3 = ((tmp_39_fu_707_p2[0:0] === 1'b1) ? 32'd0 : g_1_to_int_fu_672_p1);

assign p_Val2_s_fu_712_p3 = ((tmp_31_fu_667_p2[0:0] === 1'b1) ? 32'd0 : r_1_to_int_fu_632_p1);

assign p_dst_data_stream_0_V_din = p_Val2_17_reg_1207;

assign p_dst_data_stream_1_V_din = p_Val2_18_reg_1212;

assign p_dst_data_stream_2_V_din = ap_reg_pp0_iter44_p_Val2_19_reg_1124;

assign r_1_fu_578_p3 = ((tmp_27_fu_573_p2[0:0] === 1'b1) ? 32'd1132396544 : ap_reg_pp0_iter40_r_reg_1139);

assign r_1_to_int_fu_632_p1 = ap_reg_pp0_iter42_r_1_reg_1163;

assign r_to_int_fu_538_p1 = ap_reg_pp0_iter40_r_reg_1139;

assign sh_assign_1_fu_795_p3 = ((isNeg_fu_778_p3[0:0] === 1'b1) ? tmp_39_i_i_i_cast_fu_791_p1 : sh_assign_fu_772_p2);

assign sh_assign_1_i_i_i73_1_fu_908_p1 = $signed(sh_assign_3_fu_896_p3);

assign sh_assign_1_i_i_i73_s_fu_904_p1 = $signed(sh_assign_3_fu_896_p3);

assign sh_assign_1_i_i_i90_1_fu_488_p1 = $signed(sh_assign_5_fu_476_p3);

assign sh_assign_1_i_i_i90_s_fu_484_p1 = $signed(sh_assign_5_fu_476_p3);

assign sh_assign_1_i_i_i_ca_1_fu_807_p1 = $signed(sh_assign_1_fu_795_p3);

assign sh_assign_1_i_i_i_ca_fu_803_p1 = $signed(sh_assign_1_fu_795_p3);

assign sh_assign_2_fu_873_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i69_cast_fu_870_p1));

assign sh_assign_3_fu_896_p3 = ((isNeg_1_fu_879_p3[0:0] === 1'b1) ? tmp_39_i_i_i72_cast_fu_892_p1 : sh_assign_2_fu_873_p2);

assign sh_assign_4_fu_453_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i86_cast_fu_450_p1));

assign sh_assign_5_fu_476_p3 = ((isNeg_2_fu_459_p3[0:0] === 1'b1) ? tmp_39_i_i_i89_cast_fu_472_p1 : sh_assign_4_fu_453_p2);

assign sh_assign_fu_772_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_769_p1));

assign start_out = real_start;

assign tmp_24_fu_541_p4 = {{r_to_int_fu_538_p1[30:23]}};

assign tmp_25_fu_567_p2 = (notrhs_fu_561_p2 | notlhs_fu_555_p2);

assign tmp_27_fu_573_p2 = (tmp_26_reg_1153 & tmp_25_fu_567_p2);

assign tmp_28_fu_635_p4 = {{r_1_to_int_fu_632_p1[30:23]}};

assign tmp_29_fu_661_p2 = (notrhs2_fu_655_p2 | notlhs9_fu_649_p2);

assign tmp_31_fu_667_p2 = (tmp_30_reg_1175 & tmp_29_fu_661_p2);

assign tmp_32_fu_588_p4 = {{g_to_int_fu_585_p1[30:23]}};

assign tmp_33_fu_614_p2 = (notrhs3_fu_608_p2 | notlhs2_fu_602_p2);

assign tmp_35_fu_620_p2 = (tmp_34_reg_1158 & tmp_33_fu_614_p2);

assign tmp_36_fu_675_p4 = {{g_1_to_int_fu_672_p1[30:23]}};

assign tmp_37_fu_701_p2 = (notrhs4_fu_695_p2 | notlhs3_fu_689_p2);

assign tmp_38_i_i_i1_fu_857_p4 = {{{{1'd1}, {loc_V_4_reg_1202}}}, {1'd0}};

assign tmp_38_i_i_i2_fu_437_p4 = {{{{1'd1}, {loc_V_6_reg_1119}}}, {1'd0}};

assign tmp_38_i_i_i68_cast1_fu_866_p1 = tmp_38_i_i_i1_fu_857_p4;

assign tmp_38_i_i_i85_cast1_fu_446_p1 = tmp_38_i_i_i2_fu_437_p4;

assign tmp_38_i_i_i_cast1_fu_765_p1 = tmp_38_i_i_i_fu_756_p4;

assign tmp_38_i_i_i_fu_756_p4 = {{{{1'd1}, {loc_V_2_reg_1191}}}, {1'd0}};

assign tmp_39_fu_707_p2 = (tmp_38_reg_1180 & tmp_37_fu_701_p2);

assign tmp_39_i_i_i1_fu_887_p2 = (8'd127 - loc_V_3_reg_1196);

assign tmp_39_i_i_i2_fu_467_p2 = (8'd127 - loc_V_5_reg_1113);

assign tmp_39_i_i_i72_cast_fu_892_p1 = $signed(tmp_39_i_i_i1_fu_887_p2);

assign tmp_39_i_i_i89_cast_fu_472_p1 = $signed(tmp_39_i_i_i2_fu_467_p2);

assign tmp_39_i_i_i_cast_fu_791_p1 = $signed(tmp_39_i_i_i_fu_786_p2);

assign tmp_39_i_i_i_fu_786_p2 = (8'd127 - loc_V_reg_1185);

assign tmp_40_fu_331_p4 = {{b_to_int_fu_328_p1[30:23]}};

assign tmp_40_i_i_i1_fu_912_p1 = $unsigned(sh_assign_1_i_i_i73_s_fu_904_p1);

assign tmp_40_i_i_i2_fu_492_p1 = $unsigned(sh_assign_1_i_i_i90_s_fu_484_p1);

assign tmp_40_i_i_i_fu_811_p1 = $unsigned(sh_assign_1_i_i_i_ca_fu_803_p1);

assign tmp_41_fu_357_p2 = (notrhs5_fu_351_p2 | notlhs4_fu_345_p2);

assign tmp_41_i_i_i1_fu_916_p2 = tmp_38_i_i_i1_fu_857_p4 >> sh_assign_1_i_i_i73_1_fu_908_p1;

assign tmp_41_i_i_i2_fu_496_p2 = tmp_38_i_i_i2_fu_437_p4 >> sh_assign_1_i_i_i90_1_fu_488_p1;

assign tmp_41_i_i_i_fu_815_p2 = tmp_38_i_i_i_fu_756_p4 >> sh_assign_1_i_i_i_ca_1_fu_807_p1;

assign tmp_42_i_i_i1_fu_922_p2 = tmp_38_i_i_i68_cast1_fu_866_p1 << tmp_40_i_i_i1_fu_912_p1;

assign tmp_42_i_i_i2_fu_502_p2 = tmp_38_i_i_i85_cast1_fu_446_p1 << tmp_40_i_i_i2_fu_492_p1;

assign tmp_42_i_i_i_fu_821_p2 = tmp_38_i_i_i_cast1_fu_765_p1 << tmp_40_i_i_i_fu_811_p1;

assign tmp_43_fu_363_p2 = (tmp_42_reg_1097 & tmp_41_fu_357_p2);

assign tmp_44_fu_378_p4 = {{b_1_to_int_fu_375_p1[30:23]}};

assign tmp_45_fu_404_p2 = (notrhs6_fu_398_p2 | notlhs5_fu_392_p2);

assign tmp_47_fu_410_p2 = (tmp_46_reg_1108 & tmp_45_fu_404_p2);

assign tmp_48_fu_835_p1 = tmp_73_fu_827_p3;

assign tmp_49_fu_839_p4 = {{tmp_42_i_i_i_fu_821_p2[31:24]}};

assign tmp_50_fu_936_p1 = tmp_76_fu_928_p3;

assign tmp_51_fu_940_p4 = {{tmp_42_i_i_i1_fu_922_p2[31:24]}};

assign tmp_52_fu_516_p1 = tmp_79_fu_508_p3;

assign tmp_53_fu_520_p4 = {{tmp_42_i_i_i2_fu_502_p2[31:24]}};

assign tmp_65_fu_551_p1 = r_to_int_fu_538_p1[22:0];

assign tmp_66_fu_645_p1 = r_1_to_int_fu_632_p1[22:0];

assign tmp_67_fu_598_p1 = g_to_int_fu_585_p1[22:0];

assign tmp_68_fu_685_p1 = g_1_to_int_fu_672_p1[22:0];

assign tmp_69_fu_341_p1 = b_to_int_fu_328_p1[22:0];

assign tmp_70_fu_388_p1 = b_1_to_int_fu_375_p1[22:0];

assign tmp_73_fu_827_p3 = tmp_41_i_i_i_fu_815_p2[32'd24];

assign tmp_76_fu_928_p3 = tmp_41_i_i_i1_fu_916_p2[32'd24];

assign tmp_79_fu_508_p3 = tmp_41_i_i_i2_fu_496_p2[32'd24];

assign tmp_i_i_i_i69_cast_fu_870_p1 = loc_V_3_reg_1196;

assign tmp_i_i_i_i86_cast_fu_450_p1 = loc_V_5_reg_1113;

assign tmp_i_i_i_i_cast_fu_769_p1 = loc_V_reg_1185;

endmodule //Cvt_YCrCb_to_RGB
