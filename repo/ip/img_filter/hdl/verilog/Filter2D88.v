// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D88 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1013;
reg   [0:0] ap_reg_pp0_iter1_exitcond388_i_reg_1013;
reg   [0:0] or_cond_i_i_reg_1027;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_i_reg_1027;
reg   [0:0] icmp_reg_978;
reg   [0:0] tmp_s_reg_969;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1050;
reg   [0:0] ap_reg_pp0_iter4_or_cond_i_reg_1050;
reg   [10:0] t_V_2_reg_245;
wire   [0:0] exitcond389_i_fu_256_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_262_p2;
reg   [10:0] i_V_reg_964;
wire   [0:0] tmp_s_fu_268_p2;
wire   [0:0] tmp_105_not_fu_274_p2;
reg   [0:0] tmp_105_not_reg_973;
wire   [0:0] icmp_fu_290_p2;
wire   [0:0] tmp_2_fu_296_p2;
reg   [0:0] tmp_2_reg_983;
wire   [0:0] tmp_149_1_fu_302_p2;
reg   [0:0] tmp_149_1_reg_987;
wire   [0:0] tmp_3_fu_308_p2;
reg   [0:0] tmp_3_reg_991;
wire   [1:0] tmp_9_fu_314_p1;
reg   [1:0] tmp_9_reg_998;
wire   [1:0] row_assign_8_1_t_fu_318_p2;
reg   [1:0] row_assign_8_1_t_reg_1003;
wire   [1:0] row_assign_8_2_t_fu_324_p2;
reg   [1:0] row_assign_8_2_t_reg_1008;
wire   [0:0] exitcond388_i_fu_334_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op107_read_state5;
reg    ap_predicate_op118_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter2_exitcond388_i_reg_1013;
wire   [10:0] j_V_fu_340_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] ImagLoc_x_fu_362_p2;
reg   [11:0] ImagLoc_x_reg_1022;
wire   [0:0] or_cond_i_i_fu_388_p2;
wire   [11:0] p_p2_i_i_fu_408_p3;
reg   [11:0] p_p2_i_i_reg_1032;
wire   [0:0] sel_tmp8_fu_434_p2;
reg   [0:0] sel_tmp8_reg_1038;
wire   [0:0] brmerge_fu_440_p2;
reg   [0:0] brmerge_reg_1043;
reg   [0:0] ap_reg_pp0_iter1_brmerge_reg_1043;
wire   [0:0] or_cond_i_fu_445_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_reg_1050;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_reg_1050;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_reg_1050;
wire   [1:0] tmp_22_fu_471_p1;
reg   [1:0] tmp_22_reg_1054;
reg   [10:0] k_buf_0_val_3_addr_reg_1059;
reg   [10:0] k_buf_0_val_4_addr_reg_1065;
reg   [10:0] k_buf_0_val_5_addr_reg_1071;
wire   [7:0] col_buf_0_val_0_0_fu_517_p3;
reg   [7:0] col_buf_0_val_0_0_reg_1077;
wire   [7:0] col_buf_0_val_1_0_fu_536_p3;
reg   [7:0] col_buf_0_val_1_0_reg_1082;
wire   [7:0] col_buf_0_val_2_0_fu_555_p3;
reg   [7:0] col_buf_0_val_2_0_reg_1087;
wire   [7:0] tmp_14_fu_598_p5;
reg   [7:0] tmp_14_reg_1092;
wire   [7:0] tmp_15_fu_609_p5;
reg   [7:0] tmp_15_reg_1097;
wire   [7:0] tmp_16_fu_620_p5;
reg   [7:0] tmp_16_reg_1102;
wire   [7:0] tmp_28_fu_717_p1;
reg   [7:0] tmp_28_reg_1107;
wire   [8:0] r_V_7_2_2_fu_729_p2;
reg   [8:0] r_V_7_2_2_reg_1112;
wire   [10:0] tmp19_fu_739_p2;
reg   [10:0] tmp19_reg_1117;
wire   [9:0] tmp21_fu_745_p2;
reg   [9:0] tmp21_reg_1122;
wire   [7:0] tmp22_fu_751_p2;
reg   [7:0] tmp22_reg_1127;
wire   [7:0] tmp24_fu_757_p2;
reg   [7:0] tmp24_reg_1132;
wire   [7:0] p_Val2_s_fu_878_p3;
reg   [7:0] p_Val2_s_reg_1137;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state5;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [10:0] t_V_reg_234;
reg    ap_block_state1;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_5_fu_475_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_114;
wire   [7:0] src_kernel_win_0_va_6_fu_631_p3;
reg   [7:0] src_kernel_win_0_va_1_fu_118;
reg   [7:0] src_kernel_win_0_va_2_fu_122;
wire   [7:0] src_kernel_win_0_va_7_fu_636_p3;
reg   [7:0] src_kernel_win_0_va_3_fu_126;
reg   [7:0] src_kernel_win_0_va_4_fu_130;
wire   [7:0] src_kernel_win_0_va_8_fu_641_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_134;
reg   [7:0] right_border_buf_0_s_fu_138;
reg   [7:0] right_border_buf_0_1_fu_142;
reg   [7:0] right_border_buf_0_2_fu_146;
reg   [7:0] right_border_buf_0_3_fu_150;
reg   [7:0] right_border_buf_0_4_fu_154;
reg   [7:0] right_border_buf_0_5_fu_158;
wire   [9:0] tmp_7_fu_280_p4;
wire   [9:0] tmp_10_fu_346_p4;
wire   [11:0] t_V_3_cast_fu_330_p1;
wire   [0:0] tmp_12_fu_368_p3;
wire   [0:0] tmp_1_fu_382_p2;
wire   [0:0] rev_fu_376_p2;
wire   [0:0] tmp_21_fu_394_p3;
wire   [11:0] p_assign_1_fu_402_p2;
wire   [0:0] tmp_11_not_fu_422_p2;
wire   [0:0] tmp_4_fu_416_p2;
wire   [0:0] sel_tmp7_fu_428_p2;
wire   [0:0] icmp1_fu_356_p2;
wire   [11:0] p_assign_2_fu_450_p2;
wire   [11:0] p_assign_3_fu_455_p3;
wire   [11:0] x_fu_461_p3;
wire  signed [31:0] col_assign_cast8_fu_467_p1;
wire   [1:0] col_assign_1_fu_500_p2;
wire   [7:0] tmp_6_fu_505_p5;
wire   [7:0] tmp_11_fu_524_p5;
wire   [7:0] tmp_13_fu_543_p5;
wire   [8:0] tmp_193_0_cast_fu_655_p1;
wire   [8:0] OP1_V_0_2_cast_fu_659_p1;
wire   [8:0] p_Val2_16_0_2_fu_663_p2;
wire   [8:0] r_V_7_1_fu_673_p3;
wire   [8:0] p_shl_fu_695_p3;
wire   [9:0] p_shl_cast_fu_703_p1;
wire   [9:0] r_V_7_1_2_fu_707_p2;
wire   [8:0] OP1_V_2_2_cast_fu_725_p1;
wire  signed [10:0] p_Val2_16_0_2_cast_fu_669_p1;
wire  signed [10:0] tmp_193_1_2_cast_fu_713_p1;
wire   [9:0] tmp_193_2_cast_cast_fu_721_p1;
wire   [9:0] tmp_193_1_cast_cast_fu_681_p1;
wire   [7:0] tmp_27_fu_689_p2;
wire   [7:0] tmp_26_fu_685_p1;
wire   [7:0] tmp_29_fu_735_p1;
wire  signed [10:0] tmp_193_2_2_cast_fu_802_p1;
wire   [10:0] tmp21_cast_fu_805_p1;
wire   [10:0] tmp20_fu_808_p2;
wire   [10:0] p_Val2_1_fu_814_p2;
wire   [7:0] tmp23_fu_827_p2;
wire   [0:0] isneg_fu_819_p3;
wire   [2:0] tmp_17_fu_836_p4;
wire   [0:0] not_i_i_i_fu_852_p2;
wire   [0:0] tmp_i_i_fu_846_p2;
wire   [0:0] overflow_fu_858_p2;
wire   [0:0] tmp_i_i_83_fu_872_p2;
wire   [7:0] p_mux_i_i_cast_fu_864_p3;
wire   [7:0] p_Val2_2_fu_831_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_358;
reg    ap_condition_352;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D88_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1059),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D88_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1065),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D88_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1071),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

img_filter_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
img_filter_mux_32hbi_U34(
    .din0(right_border_buf_0_s_fu_138),
    .din1(right_border_buf_0_1_fu_142),
    .din2(8'd0),
    .din3(col_assign_1_fu_500_p2),
    .dout(tmp_6_fu_505_p5)
);

img_filter_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
img_filter_mux_32hbi_U35(
    .din0(right_border_buf_0_3_fu_150),
    .din1(right_border_buf_0_4_fu_154),
    .din2(8'd0),
    .din3(col_assign_1_fu_500_p2),
    .dout(tmp_11_fu_524_p5)
);

img_filter_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
img_filter_mux_32hbi_U36(
    .din0(right_border_buf_0_5_fu_158),
    .din1(right_border_buf_0_2_fu_146),
    .din2(8'd0),
    .din3(col_assign_1_fu_500_p2),
    .dout(tmp_13_fu_543_p5)
);

img_filter_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
img_filter_mux_32hbi_U37(
    .din0(col_buf_0_val_0_0_fu_517_p3),
    .din1(col_buf_0_val_1_0_fu_536_p3),
    .din2(col_buf_0_val_2_0_fu_555_p3),
    .din3(tmp_9_reg_998),
    .dout(tmp_14_fu_598_p5)
);

img_filter_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
img_filter_mux_32hbi_U38(
    .din0(col_buf_0_val_0_0_fu_517_p3),
    .din1(col_buf_0_val_1_0_fu_536_p3),
    .din2(col_buf_0_val_2_0_fu_555_p3),
    .din3(row_assign_8_1_t_reg_1003),
    .dout(tmp_15_fu_609_p5)
);

img_filter_mux_32hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
img_filter_mux_32hbi_U39(
    .din0(col_buf_0_val_0_0_fu_517_p3),
    .din1(col_buf_0_val_1_0_fu_536_p3),
    .din2(col_buf_0_val_2_0_fu_555_p3),
    .din3(row_assign_8_2_t_reg_1008),
    .dout(tmp_16_fu_620_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_334_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond389_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_334_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_245 <= j_V_fu_340_p2;
    end else if (((exitcond389_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_245 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_234 <= i_V_reg_964;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_234 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_334_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLoc_x_reg_1022 <= ImagLoc_x_fu_362_p2;
        brmerge_reg_1043 <= brmerge_fu_440_p2;
        or_cond_i_i_reg_1027 <= or_cond_i_i_fu_388_p2;
        or_cond_i_reg_1050 <= or_cond_i_fu_445_p2;
        p_p2_i_i_reg_1032 <= p_p2_i_i_fu_408_p3;
        sel_tmp8_reg_1038 <= sel_tmp8_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_brmerge_reg_1043 <= brmerge_reg_1043;
        ap_reg_pp0_iter1_exitcond388_i_reg_1013 <= exitcond388_i_reg_1013;
        ap_reg_pp0_iter1_or_cond_i_i_reg_1027 <= or_cond_i_i_reg_1027;
        ap_reg_pp0_iter1_or_cond_i_reg_1050 <= or_cond_i_reg_1050;
        exitcond388_i_reg_1013 <= exitcond388_i_fu_334_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond388_i_reg_1013 <= ap_reg_pp0_iter1_exitcond388_i_reg_1013;
        ap_reg_pp0_iter2_or_cond_i_reg_1050 <= ap_reg_pp0_iter1_or_cond_i_reg_1050;
        ap_reg_pp0_iter3_or_cond_i_reg_1050 <= ap_reg_pp0_iter2_or_cond_i_reg_1050;
        ap_reg_pp0_iter4_or_cond_i_reg_1050 <= ap_reg_pp0_iter3_or_cond_i_reg_1050;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_0_reg_1077 <= col_buf_0_val_0_0_fu_517_p3;
        col_buf_0_val_1_0_reg_1082 <= col_buf_0_val_1_0_fu_536_p3;
        col_buf_0_val_2_0_reg_1087 <= col_buf_0_val_2_0_fu_555_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_964 <= i_V_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_256_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_978 <= icmp_fu_290_p2;
        row_assign_8_1_t_reg_1003 <= row_assign_8_1_t_fu_318_p2;
        row_assign_8_2_t_reg_1008 <= row_assign_8_2_t_fu_324_p2;
        tmp_105_not_reg_973 <= tmp_105_not_fu_274_p2;
        tmp_149_1_reg_987 <= tmp_149_1_fu_302_p2;
        tmp_2_reg_983 <= tmp_2_fu_296_p2;
        tmp_3_reg_991 <= tmp_3_fu_308_p2;
        tmp_9_reg_998 <= tmp_9_fu_314_p1;
        tmp_s_reg_969 <= tmp_s_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1013 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1059 <= tmp_5_fu_475_p1;
        k_buf_0_val_4_addr_reg_1065 <= tmp_5_fu_475_p1;
        k_buf_0_val_5_addr_reg_1071 <= tmp_5_fu_475_p1;
        tmp_22_reg_1054 <= tmp_22_fu_471_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_i_reg_1050 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_1137 <= p_Val2_s_fu_878_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_or_cond_i_reg_1050 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_7_2_2_reg_1112 <= r_V_7_2_2_fu_729_p2;
        tmp19_reg_1117 <= tmp19_fu_739_p2;
        tmp21_reg_1122 <= tmp21_fu_745_p2;
        tmp22_reg_1127 <= tmp22_fu_751_p2;
        tmp24_reg_1132 <= tmp24_fu_757_p2;
        tmp_28_reg_1107[7 : 1] <= tmp_28_fu_717_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_142 <= right_border_buf_0_s_fu_138;
        right_border_buf_0_2_fu_146 <= right_border_buf_0_5_fu_158;
        right_border_buf_0_3_fu_150 <= col_buf_0_val_1_0_fu_536_p3;
        right_border_buf_0_4_fu_154 <= right_border_buf_0_3_fu_150;
        right_border_buf_0_5_fu_158 <= col_buf_0_val_2_0_fu_555_p3;
        right_border_buf_0_s_fu_138 <= col_buf_0_val_0_0_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond388_i_reg_1013 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_118 <= src_kernel_win_0_va_fu_114;
        src_kernel_win_0_va_2_fu_122 <= src_kernel_win_0_va_7_fu_636_p3;
        src_kernel_win_0_va_3_fu_126 <= src_kernel_win_0_va_2_fu_122;
        src_kernel_win_0_va_4_fu_130 <= src_kernel_win_0_va_8_fu_641_p3;
        src_kernel_win_0_va_5_fu_134 <= src_kernel_win_0_va_4_fu_130;
        src_kernel_win_0_va_fu_114 <= src_kernel_win_0_va_6_fu_631_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_reg_991 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_14_reg_1092 <= tmp_14_fu_598_p5;
        tmp_15_reg_1097 <= tmp_15_fu_609_p5;
        tmp_16_reg_1102 <= tmp_16_fu_620_p5;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_983 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_983 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_149_1_reg_987 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op118_read_state5 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_358)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_149_1_reg_987 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_983 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op118_read_state5 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_352)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_983 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter4_or_cond_i_reg_1050 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter4_or_cond_i_reg_1050 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_969 == 1'd1) & (icmp_reg_978 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op118_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op107_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_256_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_362_p2 = ($signed(12'd4095) + $signed(t_V_3_cast_fu_330_p1));

assign OP1_V_0_2_cast_fu_659_p1 = src_kernel_win_0_va_8_fu_641_p3;

assign OP1_V_2_2_cast_fu_725_p1 = src_kernel_win_0_va_6_fu_631_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter4_or_cond_i_reg_1050 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op118_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op107_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter4_or_cond_i_reg_1050 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op118_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op107_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter4_or_cond_i_reg_1050 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op118_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op107_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op118_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op107_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((ap_reg_pp0_iter4_or_cond_i_reg_1050 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_352 = ((tmp_2_reg_983 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0));
end

always @ (*) begin
    ap_condition_358 = ((tmp_149_1_reg_987 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op107_read_state5 = ((ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (icmp_reg_978 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0));
end

always @ (*) begin
    ap_predicate_op118_read_state5 = ((tmp_s_reg_969 == 1'd1) & (icmp_reg_978 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1027 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1013 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign brmerge_fu_440_p2 = (tmp_1_fu_382_p2 | tmp_105_not_reg_973);

assign col_assign_1_fu_500_p2 = (tmp_22_reg_1054 ^ 2'd3);

assign col_assign_cast8_fu_467_p1 = $signed(x_fu_461_p3);

assign col_buf_0_val_0_0_fu_517_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1043[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_6_fu_505_p5);

assign col_buf_0_val_1_0_fu_536_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1043[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_11_fu_524_p5);

assign col_buf_0_val_2_0_fu_555_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1043[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_13_fu_543_p5);

assign exitcond388_i_fu_334_p2 = ((t_V_2_reg_245 == 11'd1922) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_256_p2 = ((t_V_reg_234 == 11'd1082) ? 1'b1 : 1'b0);

assign i_V_fu_262_p2 = (t_V_reg_234 + 11'd1);

assign icmp1_fu_356_p2 = ((tmp_10_fu_346_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_290_p2 = ((tmp_7_fu_280_p4 != 10'd0) ? 1'b1 : 1'b0);

assign isneg_fu_819_p3 = p_Val2_1_fu_814_p2[32'd10];

assign j_V_fu_340_p2 = (t_V_2_reg_245 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_5_fu_475_p1;

assign k_buf_0_val_4_address0 = tmp_5_fu_475_p1;

assign k_buf_0_val_5_address0 = tmp_5_fu_475_p1;

assign not_i_i_i_fu_852_p2 = ((tmp_17_fu_836_p4 != 3'd0) ? 1'b1 : 1'b0);

assign or_cond_i_fu_445_p2 = (icmp_reg_978 & icmp1_fu_356_p2);

assign or_cond_i_i_fu_388_p2 = (tmp_1_fu_382_p2 & rev_fu_376_p2);

assign overflow_fu_858_p2 = (tmp_i_i_fu_846_p2 & not_i_i_i_fu_852_p2);

assign p_Val2_16_0_2_cast_fu_669_p1 = $signed(p_Val2_16_0_2_fu_663_p2);

assign p_Val2_16_0_2_fu_663_p2 = (tmp_193_0_cast_fu_655_p1 - OP1_V_0_2_cast_fu_659_p1);

assign p_Val2_1_fu_814_p2 = (tmp19_reg_1117 + tmp20_fu_808_p2);

assign p_Val2_2_fu_831_p2 = (tmp22_reg_1127 + tmp23_fu_827_p2);

assign p_Val2_s_fu_878_p3 = ((tmp_i_i_83_fu_872_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_864_p3 : p_Val2_2_fu_831_p2);

assign p_assign_1_fu_402_p2 = (12'd1 - t_V_3_cast_fu_330_p1);

assign p_assign_2_fu_450_p2 = ($signed(12'd3838) - $signed(p_p2_i_i_reg_1032));

assign p_assign_3_fu_455_p3 = ((or_cond_i_i_reg_1027[0:0] === 1'b1) ? ImagLoc_x_reg_1022 : p_assign_2_fu_450_p2);

assign p_dst_data_stream_V_din = p_Val2_s_reg_1137;

assign p_mux_i_i_cast_fu_864_p3 = ((tmp_i_i_fu_846_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i_i_fu_408_p3 = ((tmp_21_fu_394_p3[0:0] === 1'b1) ? p_assign_1_fu_402_p2 : ImagLoc_x_fu_362_p2);

assign p_shl_cast_fu_703_p1 = p_shl_fu_695_p3;

assign p_shl_fu_695_p3 = {{src_kernel_win_0_va_7_fu_636_p3}, {1'd0}};

assign r_V_7_1_2_fu_707_p2 = (10'd0 - p_shl_cast_fu_703_p1);

assign r_V_7_1_fu_673_p3 = {{src_kernel_win_0_va_3_fu_126}, {1'd0}};

assign r_V_7_2_2_fu_729_p2 = (9'd0 - OP1_V_2_2_cast_fu_725_p1);

assign rev_fu_376_p2 = (tmp_12_fu_368_p3 ^ 1'd1);

assign row_assign_8_1_t_fu_318_p2 = (tmp_9_fu_314_p1 ^ 2'd1);

assign row_assign_8_2_t_fu_324_p2 = ($signed(2'd2) - $signed(tmp_9_fu_314_p1));

assign sel_tmp7_fu_428_p2 = (tmp_12_fu_368_p3 | tmp_11_not_fu_422_p2);

assign sel_tmp8_fu_434_p2 = (tmp_4_fu_416_p2 & sel_tmp7_fu_428_p2);

assign src_kernel_win_0_va_6_fu_631_p3 = ((tmp_3_reg_991[0:0] === 1'b1) ? tmp_14_reg_1092 : col_buf_0_val_0_0_reg_1077);

assign src_kernel_win_0_va_7_fu_636_p3 = ((tmp_3_reg_991[0:0] === 1'b1) ? tmp_15_reg_1097 : col_buf_0_val_1_0_reg_1082);

assign src_kernel_win_0_va_8_fu_641_p3 = ((tmp_3_reg_991[0:0] === 1'b1) ? tmp_16_reg_1102 : col_buf_0_val_2_0_reg_1087);

assign start_out = real_start;

assign t_V_3_cast_fu_330_p1 = t_V_2_reg_245;

assign tmp19_fu_739_p2 = ($signed(p_Val2_16_0_2_cast_fu_669_p1) + $signed(tmp_193_1_2_cast_fu_713_p1));

assign tmp20_fu_808_p2 = ($signed(tmp_193_2_2_cast_fu_802_p1) + $signed(tmp21_cast_fu_805_p1));

assign tmp21_cast_fu_805_p1 = tmp21_reg_1122;

assign tmp21_fu_745_p2 = (tmp_193_2_cast_cast_fu_721_p1 + tmp_193_1_cast_cast_fu_681_p1);

assign tmp22_fu_751_p2 = (tmp_27_fu_689_p2 + tmp_26_fu_685_p1);

assign tmp23_fu_827_p2 = (tmp_28_reg_1107 + tmp24_reg_1132);

assign tmp24_fu_757_p2 = (tmp_29_fu_735_p1 + src_kernel_win_0_va_1_fu_118);

assign tmp_105_not_fu_274_p2 = ((t_V_reg_234 > 11'd1079) ? 1'b1 : 1'b0);

assign tmp_10_fu_346_p4 = {{t_V_2_reg_245[10:1]}};

assign tmp_11_not_fu_422_p2 = (tmp_1_fu_382_p2 ^ 1'd1);

assign tmp_12_fu_368_p3 = ImagLoc_x_fu_362_p2[32'd11];

assign tmp_149_1_fu_302_p2 = ((t_V_reg_234 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_17_fu_836_p4 = {{p_Val2_1_fu_814_p2[10:8]}};

assign tmp_193_0_cast_fu_655_p1 = src_kernel_win_0_va_5_fu_134;

assign tmp_193_1_2_cast_fu_713_p1 = $signed(r_V_7_1_2_fu_707_p2);

assign tmp_193_1_cast_cast_fu_681_p1 = r_V_7_1_fu_673_p3;

assign tmp_193_2_2_cast_fu_802_p1 = $signed(r_V_7_2_2_reg_1112);

assign tmp_193_2_cast_cast_fu_721_p1 = src_kernel_win_0_va_1_fu_118;

assign tmp_1_fu_382_p2 = (($signed(ImagLoc_x_fu_362_p2) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_21_fu_394_p3 = ImagLoc_x_fu_362_p2[32'd11];

assign tmp_22_fu_471_p1 = x_fu_461_p3[1:0];

assign tmp_26_fu_685_p1 = p_Val2_16_0_2_fu_663_p2[7:0];

assign tmp_27_fu_689_p2 = src_kernel_win_0_va_3_fu_126 << 8'd1;

assign tmp_28_fu_717_p1 = r_V_7_1_2_fu_707_p2[7:0];

assign tmp_29_fu_735_p1 = r_V_7_2_2_fu_729_p2[7:0];

assign tmp_2_fu_296_p2 = ((t_V_reg_234 == 11'd1) ? 1'b1 : 1'b0);

assign tmp_3_fu_308_p2 = ((t_V_reg_234 > 11'd1080) ? 1'b1 : 1'b0);

assign tmp_4_fu_416_p2 = (($signed(p_p2_i_i_fu_408_p3) < $signed(12'd1920)) ? 1'b1 : 1'b0);

assign tmp_5_fu_475_p1 = $unsigned(col_assign_cast8_fu_467_p1);

assign tmp_7_fu_280_p4 = {{t_V_reg_234[10:1]}};

assign tmp_9_fu_314_p1 = t_V_reg_234[1:0];

assign tmp_i_i_83_fu_872_p2 = (overflow_fu_858_p2 | isneg_fu_819_p3);

assign tmp_i_i_fu_846_p2 = (isneg_fu_819_p3 ^ 1'd1);

assign tmp_s_fu_268_p2 = ((t_V_reg_234 < 11'd1080) ? 1'b1 : 1'b0);

assign x_fu_461_p3 = ((sel_tmp8_reg_1038[0:0] === 1'b1) ? p_p2_i_i_reg_1032 : p_assign_3_fu_455_p3);

always @ (posedge ap_clk) begin
    tmp_28_reg_1107[0] <= 1'b0;
end

endmodule //Filter2D88
