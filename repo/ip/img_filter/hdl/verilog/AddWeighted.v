// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AddWeighted (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src1_data_stream_V_dout,
        src1_data_stream_V_empty_n,
        src1_data_stream_V_read,
        src2_data_stream_V_dout,
        src2_data_stream_V_empty_n,
        src2_data_stream_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state35 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src1_data_stream_V_dout;
input   src1_data_stream_V_empty_n;
output   src1_data_stream_V_read;
input  [7:0] src2_data_stream_V_dout;
input   src2_data_stream_V_empty_n;
output   src2_data_stream_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src1_data_stream_V_read;
reg src2_data_stream_V_read;
reg dst_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src1_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_reg_920;
reg    src2_data_stream_V_blk_n;
reg    dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter31;
reg   [0:0] ap_reg_pp0_iter30_exitcond_i_reg_920;
reg   [10:0] t_V_5_reg_156;
wire   [0:0] exitcond1_i_fu_195_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] i_V_fu_201_p2;
reg   [10:0] i_V_reg_915;
wire   [0:0] exitcond_i_fu_207_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
reg    ap_block_state34_pp0_stage0_iter31;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter2_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter3_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter4_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter5_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter6_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter7_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter8_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter9_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter10_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter11_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter12_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter13_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter14_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter15_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter16_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter17_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter18_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter19_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter20_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter21_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter22_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter23_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter24_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter25_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter26_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter27_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter28_exitcond_i_reg_920;
reg   [0:0] ap_reg_pp0_iter29_exitcond_i_reg_920;
wire   [10:0] j_V_fu_213_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_73_reg_929;
reg   [7:0] tmp_74_reg_934;
wire   [31:0] grp_fu_186_p1;
reg   [31:0] tmp_39_i_reg_949;
wire   [31:0] grp_fu_189_p1;
reg   [31:0] tmp_41_i_reg_954;
wire   [31:0] grp_fu_176_p2;
reg   [31:0] t1_reg_959;
wire   [31:0] grp_fu_181_p2;
reg   [31:0] t2_reg_964;
wire   [31:0] grp_fu_167_p2;
reg   [31:0] tmp_42_i_reg_969;
wire   [31:0] grp_fu_171_p2;
reg   [31:0] sum_reg_974;
wire   [0:0] tmp_i_i_i_fu_244_p2;
reg   [0:0] tmp_i_i_i_reg_980;
reg   [0:0] ap_reg_pp0_iter27_tmp_i_i_i_reg_980;
reg   [0:0] ap_reg_pp0_iter28_tmp_i_i_i_reg_980;
reg   [0:0] ap_reg_pp0_iter29_tmp_i_i_i_reg_980;
reg   [0:0] ap_reg_pp0_iter30_tmp_i_i_i_reg_980;
wire   [0:0] tmp_i_i_i_100_fu_250_p2;
reg   [0:0] tmp_i_i_i_100_reg_986;
reg   [0:0] ap_reg_pp0_iter27_tmp_i_i_i_100_reg_986;
reg   [0:0] ap_reg_pp0_iter28_tmp_i_i_i_100_reg_986;
reg   [0:0] ap_reg_pp0_iter29_tmp_i_i_i_100_reg_986;
reg   [0:0] ap_reg_pp0_iter30_tmp_i_i_i_100_reg_986;
wire   [62:0] tmp_fu_260_p1;
reg   [62:0] tmp_reg_992;
reg   [0:0] isneg_reg_997;
reg   [0:0] ap_reg_pp0_iter27_isneg_reg_997;
reg   [0:0] ap_reg_pp0_iter28_isneg_reg_997;
reg   [0:0] ap_reg_pp0_iter29_isneg_reg_997;
wire   [51:0] tmp_61_fu_286_p1;
reg   [51:0] tmp_61_reg_1007;
wire   [11:0] F2_fu_290_p2;
reg   [11:0] F2_reg_1012;
reg   [11:0] ap_reg_pp0_iter27_F2_reg_1012;
reg   [11:0] ap_reg_pp0_iter28_F2_reg_1012;
wire   [0:0] tmp_8_i3_fu_296_p2;
reg   [0:0] tmp_8_i3_reg_1023;
reg   [0:0] ap_reg_pp0_iter27_tmp_8_i3_reg_1023;
reg   [0:0] ap_reg_pp0_iter28_tmp_8_i3_reg_1023;
wire   [53:0] p_Val2_s_fu_319_p3;
reg   [53:0] p_Val2_s_reg_1030;
reg   [53:0] ap_reg_pp0_iter28_p_Val2_s_reg_1030;
wire   [0:0] tmp_4_i_fu_326_p2;
reg   [0:0] tmp_4_i_reg_1039;
reg   [0:0] ap_reg_pp0_iter28_tmp_4_i_reg_1039;
reg   [0:0] ap_reg_pp0_iter29_tmp_4_i_reg_1039;
reg   [0:0] ap_reg_pp0_iter30_tmp_4_i_reg_1039;
wire   [0:0] tmp_6_i1_fu_331_p2;
reg   [0:0] tmp_6_i1_reg_1045;
reg   [0:0] ap_reg_pp0_iter28_tmp_6_i1_reg_1045;
wire   [11:0] F2_2_fu_341_p3;
reg   [11:0] F2_2_reg_1051;
reg   [11:0] ap_reg_pp0_iter28_F2_2_reg_1051;
reg   [11:0] ap_reg_pp0_iter29_F2_2_reg_1051;
wire   [7:0] tmp_63_fu_348_p1;
reg   [7:0] tmp_63_reg_1058;
reg   [7:0] ap_reg_pp0_iter28_tmp_63_reg_1058;
reg   [7:0] ap_reg_pp0_iter29_tmp_63_reg_1058;
wire   [0:0] icmp_fu_362_p2;
reg   [0:0] icmp_reg_1064;
reg   [0:0] ap_reg_pp0_iter28_icmp_reg_1064;
reg   [0:0] ap_reg_pp0_iter29_icmp_reg_1064;
wire   [7:0] p_Val2_12_fu_396_p3;
reg   [7:0] p_Val2_12_reg_1070;
reg   [0:0] tmp_67_reg_1075;
wire   [11:0] pos1_fu_412_p2;
reg   [11:0] pos1_reg_1081;
reg   [0:0] tmp_70_reg_1087;
reg   [0:0] tmp_72_reg_1093;
reg   [0:0] ap_reg_pp0_iter29_tmp_72_reg_1093;
wire   [0:0] tmp_23_i_fu_442_p2;
reg   [0:0] tmp_23_i_reg_1098;
reg   [0:0] ap_reg_pp0_iter29_tmp_23_i_reg_1098;
wire   [53:0] tmp_24_i_fu_448_p1;
reg   [53:0] tmp_24_i_reg_1105;
wire   [53:0] Range2_V_1_fu_452_p2;
reg   [53:0] Range2_V_1_reg_1110;
wire   [0:0] tmp_27_i_fu_457_p2;
reg   [0:0] tmp_27_i_reg_1116;
wire   [7:0] sel_tmp9_i_fu_554_p3;
reg   [7:0] sel_tmp9_i_reg_1121;
wire   [0:0] sel_tmp12_demorgan_i_fu_562_p2;
reg   [0:0] sel_tmp12_demorgan_i_reg_1126;
wire   [0:0] carry_1_i_i_i_fu_583_p2;
reg   [0:0] carry_1_i_i_i_reg_1131;
wire   [0:0] tmp_18_i_fu_592_p2;
reg   [0:0] tmp_18_i_reg_1137;
wire   [0:0] rev_fu_597_p2;
reg   [0:0] rev_reg_1143;
wire   [0:0] Range1_all_ones_1_fu_621_p2;
reg   [0:0] Range1_all_ones_1_reg_1150;
wire   [0:0] Range2_all_ones_fu_632_p2;
reg   [0:0] Range2_all_ones_reg_1157;
wire   [0:0] tmp_25_i_fu_637_p2;
reg   [0:0] tmp_25_i_reg_1162;
wire   [0:0] Range1_all_zeros_1_fu_642_p2;
reg   [0:0] Range1_all_zeros_1_reg_1167;
wire   [0:0] sel_tmp34_i_fu_657_p2;
reg   [0:0] sel_tmp34_i_reg_1172;
wire   [7:0] p_Val2_14_fu_680_p3;
reg   [7:0] p_Val2_14_reg_1178;
wire   [0:0] underflow_fu_801_p3;
reg   [0:0] underflow_reg_1184;
wire   [0:0] p_121_demorgan_i_i_i_fu_814_p2;
reg   [0:0] p_121_demorgan_i_i_i_reg_1190;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg   [10:0] t_V_reg_145;
reg    ap_block_state1;
wire    ap_CS_fsm_state35;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_186_p0;
wire   [31:0] grp_fu_189_p0;
wire   [31:0] p_Val2_10_fu_227_p1;
wire   [7:0] loc_V_fu_230_p4;
wire   [22:0] loc_V_1_fu_240_p1;
wire   [63:0] d_assign_fu_192_p1;
wire   [63:0] ireg_V_fu_256_p1;
wire   [10:0] exp_tmp_V_fu_272_p4;
wire   [11:0] tmp_2_i_fu_282_p1;
wire   [52:0] tmp_1_i_fu_302_p3;
wire   [53:0] p_Result_s_fu_309_p1;
wire   [53:0] man_V_1_fu_313_p2;
wire   [11:0] tmp_7_i2_fu_336_p2;
wire   [8:0] tmp_64_fu_352_p4;
wire  signed [31:0] F2_2_cast_i_fu_368_p1;
wire   [53:0] tmp_10_i_fu_376_p1;
wire   [53:0] tmp_11_i_fu_380_p2;
wire   [0:0] tmp_i4_fu_371_p2;
wire   [7:0] tmp_65_fu_385_p1;
wire   [7:0] p_Val2_0_i_i_i6_i_fu_389_p3;
wire   [11:0] pos2_fu_417_p2;
wire  signed [31:0] pos2_cast_i_fu_422_p1;
wire   [11:0] tmp_15_i_fu_468_p2;
wire   [31:0] tmp_20_cast_i_fu_473_p1;
wire   [0:0] tmp_14_i_fu_463_p2;
wire   [0:0] tmp_66_fu_477_p3;
wire   [0:0] qb_fu_484_p3;
wire   [7:0] tmp_16_i_fu_491_p1;
wire   [7:0] p_Val2_13_fu_495_p2;
wire   [0:0] tmp_68_fu_500_p3;
wire   [0:0] sel_tmp1_i_fu_520_p2;
wire   [0:0] sel_tmp2_i_fu_525_p2;
wire   [0:0] sel_tmp3_i_fu_530_p2;
wire   [7:0] sel_tmp_i_fu_514_p3;
wire   [0:0] sel_tmp7_i_fu_543_p2;
wire   [0:0] sel_tmp8_i_fu_548_p2;
wire   [7:0] sel_tmp4_i_fu_535_p3;
wire   [0:0] tmp_5_not_i_fu_566_p2;
wire   [0:0] not_sel_tmp28_i_fu_571_p2;
wire   [0:0] tmp_17_i_fu_508_p2;
wire   [0:0] tmp6_fu_577_p2;
wire  signed [31:0] pos1_cast_i_fu_589_p1;
wire   [53:0] tmp_20_i_fu_602_p1;
wire   [53:0] tmp_21_i_fu_606_p2;
wire   [0:0] lD_fu_611_p1;
wire   [0:0] tmp7_fu_615_p2;
wire   [53:0] r_V_fu_627_p2;
wire   [0:0] tmp_23_i_not_fu_647_p2;
wire   [0:0] sel_tmp33_i_fu_652_p2;
wire   [7:0] tmp_62_fu_662_p1;
wire   [0:0] sel_tmp12_i_fu_670_p2;
wire   [0:0] sel_tmp13_i_fu_675_p2;
wire   [7:0] tmp_13_i_fu_665_p2;
wire   [0:0] rev4_fu_695_p2;
wire   [0:0] or_cond115_i_i_i_fu_700_p2;
wire   [0:0] Range2_all_ones_1_i_s_fu_705_p3;
wire   [0:0] Range1_all_zeros_fu_721_p2;
wire   [0:0] or_cond117_i_i_i_fu_712_p2;
wire   [0:0] Range1_all_ones_fu_716_p2;
wire   [0:0] sel_tmp35_i_fu_735_p3;
wire   [0:0] p_119_i_i_i_fu_731_p2;
wire   [0:0] p_122_i_i_i_fu_726_p2;
wire   [0:0] sel_tmp39_i_fu_748_p3;
wire   [0:0] Range1_all_ones_2_i_s_fu_740_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_755_p3;
wire   [0:0] Range1_all_ones_2_i_fu_770_p2;
wire   [0:0] newsignbit_fu_687_p3;
wire   [0:0] sel_tmp41_i_fu_781_p2;
wire   [0:0] tmp8_fu_786_p2;
wire   [0:0] sel_tmp47_i_fu_797_p2;
wire   [0:0] tmp_28_i_fu_775_p2;
wire   [0:0] sel_tmp46_i_fu_792_p2;
wire   [0:0] tmp9_fu_809_p2;
wire   [0:0] deleted_zeros_fu_763_p3;
wire   [0:0] underflow_not_i_fu_824_p2;
wire   [0:0] p_121_demorgan_i_i_no_fu_834_p2;
wire   [0:0] brmerge_i_i_i_not_i_fu_829_p2;
wire   [0:0] sel_tmp50_i_demorgan_fu_852_p2;
wire   [0:0] sel_tmp50_i_fu_856_p2;
wire   [0:0] sel_tmp51_i_fu_862_p2;
wire   [0:0] tmp_demorgan_i_fu_820_p2;
wire   [0:0] tmp_s_fu_867_p2;
wire   [0:0] tmp_30_fu_873_p2;
wire   [0:0] sel_tmp55_demorgan_i_fu_885_p2;
wire   [0:0] brmerge_i_fu_839_p2;
wire   [0:0] sel_tmp55_i_fu_890_p2;
wire   [0:0] sel_tmp56_i_fu_896_p2;
wire   [7:0] p_Val2_12_0_i_i_mux_fu_845_p3;
wire   [7:0] sel_tmp52_i_fu_878_p3;
reg    grp_fu_167_ce;
reg    grp_fu_171_ce;
reg    grp_fu_176_ce;
reg    grp_fu_181_ce;
reg    grp_fu_186_ce;
reg    grp_fu_189_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
end

img_filter_fadd_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_filter_fadd_3lbW_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t1_reg_959),
    .din1(t2_reg_964),
    .ce(grp_fu_167_ce),
    .dout(grp_fu_167_p2)
);

img_filter_fadd_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_filter_fadd_3lbW_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_42_i_reg_969),
    .din1(32'd0),
    .ce(grp_fu_171_ce),
    .dout(grp_fu_171_p2)
);

img_filter_fmul_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_filter_fmul_3mb6_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_i_reg_949),
    .din1(32'd1056964608),
    .ce(grp_fu_176_ce),
    .dout(grp_fu_176_p2)
);

img_filter_fmul_3mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_filter_fmul_3mb6_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_41_i_reg_954),
    .din1(32'd1056964608),
    .ce(grp_fu_181_ce),
    .dout(grp_fu_181_p2)
);

img_filter_sitofpncg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_filter_sitofpncg_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_186_p0),
    .ce(grp_fu_186_ce),
    .dout(grp_fu_186_p1)
);

img_filter_sitofpncg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
img_filter_sitofpncg_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_189_p0),
    .ce(grp_fu_189_ce),
    .dout(grp_fu_189_p1)
);

img_filter_fpext_ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
img_filter_fpext_ocq_U57(
    .din0(sum_reg_974),
    .dout(d_assign_fu_192_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond1_i_fu_195_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond1_i_fu_195_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end else if (((exitcond1_i_fu_195_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter31 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_5_reg_156 <= j_V_fu_213_p2;
    end else if (((exitcond1_i_fu_195_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_5_reg_156 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        t_V_reg_145 <= i_V_reg_915;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_145 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter26_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_2_reg_1051 <= F2_2_fu_341_p3;
        icmp_reg_1064 <= icmp_fu_362_p2;
        p_Val2_s_reg_1030 <= p_Val2_s_fu_319_p3;
        tmp_4_i_reg_1039 <= tmp_4_i_fu_326_p2;
        tmp_63_reg_1058 <= tmp_63_fu_348_p1;
        tmp_6_i1_reg_1045 <= tmp_6_i1_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter25_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_reg_1012 <= F2_fu_290_p2;
        isneg_reg_997 <= ireg_V_fu_256_p1[32'd63];
        tmp_61_reg_1007 <= tmp_61_fu_286_p1;
        tmp_8_i3_reg_1023 <= tmp_8_i3_fu_296_p2;
        tmp_i_i_i_100_reg_986 <= tmp_i_i_i_100_fu_250_p2;
        tmp_i_i_i_reg_980 <= tmp_i_i_i_fu_244_p2;
        tmp_reg_992 <= tmp_fu_260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter28_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_1_reg_1150 <= Range1_all_ones_1_fu_621_p2;
        Range1_all_zeros_1_reg_1167 <= Range1_all_zeros_1_fu_642_p2;
        Range2_all_ones_reg_1157 <= Range2_all_ones_fu_632_p2;
        carry_1_i_i_i_reg_1131 <= carry_1_i_i_i_fu_583_p2;
        rev_reg_1143 <= rev_fu_597_p2;
        sel_tmp12_demorgan_i_reg_1126 <= sel_tmp12_demorgan_i_fu_562_p2;
        sel_tmp34_i_reg_1172 <= sel_tmp34_i_fu_657_p2;
        sel_tmp9_i_reg_1121 <= sel_tmp9_i_fu_554_p3;
        tmp_18_i_reg_1137 <= tmp_18_i_fu_592_p2;
        tmp_25_i_reg_1162 <= tmp_25_i_fu_637_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter27_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range2_V_1_reg_1110 <= Range2_V_1_fu_452_p2;
        p_Val2_12_reg_1070 <= p_Val2_12_fu_396_p3;
        pos1_reg_1081 <= pos1_fu_412_p2;
        tmp_23_i_reg_1098 <= tmp_23_i_fu_442_p2;
        tmp_24_i_reg_1105[31 : 0] <= tmp_24_i_fu_448_p1[31 : 0];
        tmp_27_i_reg_1116 <= tmp_27_i_fu_457_p2;
        tmp_67_reg_1075 <= p_Val2_12_fu_396_p3[32'd7];
        tmp_70_reg_1087 <= pos1_fu_412_p2[32'd11];
        tmp_72_reg_1093 <= pos2_fu_417_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_i_reg_920 <= ap_reg_pp0_iter9_exitcond_i_reg_920;
        ap_reg_pp0_iter11_exitcond_i_reg_920 <= ap_reg_pp0_iter10_exitcond_i_reg_920;
        ap_reg_pp0_iter12_exitcond_i_reg_920 <= ap_reg_pp0_iter11_exitcond_i_reg_920;
        ap_reg_pp0_iter13_exitcond_i_reg_920 <= ap_reg_pp0_iter12_exitcond_i_reg_920;
        ap_reg_pp0_iter14_exitcond_i_reg_920 <= ap_reg_pp0_iter13_exitcond_i_reg_920;
        ap_reg_pp0_iter15_exitcond_i_reg_920 <= ap_reg_pp0_iter14_exitcond_i_reg_920;
        ap_reg_pp0_iter16_exitcond_i_reg_920 <= ap_reg_pp0_iter15_exitcond_i_reg_920;
        ap_reg_pp0_iter17_exitcond_i_reg_920 <= ap_reg_pp0_iter16_exitcond_i_reg_920;
        ap_reg_pp0_iter18_exitcond_i_reg_920 <= ap_reg_pp0_iter17_exitcond_i_reg_920;
        ap_reg_pp0_iter19_exitcond_i_reg_920 <= ap_reg_pp0_iter18_exitcond_i_reg_920;
        ap_reg_pp0_iter20_exitcond_i_reg_920 <= ap_reg_pp0_iter19_exitcond_i_reg_920;
        ap_reg_pp0_iter21_exitcond_i_reg_920 <= ap_reg_pp0_iter20_exitcond_i_reg_920;
        ap_reg_pp0_iter22_exitcond_i_reg_920 <= ap_reg_pp0_iter21_exitcond_i_reg_920;
        ap_reg_pp0_iter23_exitcond_i_reg_920 <= ap_reg_pp0_iter22_exitcond_i_reg_920;
        ap_reg_pp0_iter24_exitcond_i_reg_920 <= ap_reg_pp0_iter23_exitcond_i_reg_920;
        ap_reg_pp0_iter25_exitcond_i_reg_920 <= ap_reg_pp0_iter24_exitcond_i_reg_920;
        ap_reg_pp0_iter26_exitcond_i_reg_920 <= ap_reg_pp0_iter25_exitcond_i_reg_920;
        ap_reg_pp0_iter27_F2_reg_1012 <= F2_reg_1012;
        ap_reg_pp0_iter27_exitcond_i_reg_920 <= ap_reg_pp0_iter26_exitcond_i_reg_920;
        ap_reg_pp0_iter27_isneg_reg_997 <= isneg_reg_997;
        ap_reg_pp0_iter27_tmp_8_i3_reg_1023 <= tmp_8_i3_reg_1023;
        ap_reg_pp0_iter27_tmp_i_i_i_100_reg_986 <= tmp_i_i_i_100_reg_986;
        ap_reg_pp0_iter27_tmp_i_i_i_reg_980 <= tmp_i_i_i_reg_980;
        ap_reg_pp0_iter28_F2_2_reg_1051 <= F2_2_reg_1051;
        ap_reg_pp0_iter28_F2_reg_1012 <= ap_reg_pp0_iter27_F2_reg_1012;
        ap_reg_pp0_iter28_exitcond_i_reg_920 <= ap_reg_pp0_iter27_exitcond_i_reg_920;
        ap_reg_pp0_iter28_icmp_reg_1064 <= icmp_reg_1064;
        ap_reg_pp0_iter28_isneg_reg_997 <= ap_reg_pp0_iter27_isneg_reg_997;
        ap_reg_pp0_iter28_p_Val2_s_reg_1030 <= p_Val2_s_reg_1030;
        ap_reg_pp0_iter28_tmp_4_i_reg_1039 <= tmp_4_i_reg_1039;
        ap_reg_pp0_iter28_tmp_63_reg_1058 <= tmp_63_reg_1058;
        ap_reg_pp0_iter28_tmp_6_i1_reg_1045 <= tmp_6_i1_reg_1045;
        ap_reg_pp0_iter28_tmp_8_i3_reg_1023 <= ap_reg_pp0_iter27_tmp_8_i3_reg_1023;
        ap_reg_pp0_iter28_tmp_i_i_i_100_reg_986 <= ap_reg_pp0_iter27_tmp_i_i_i_100_reg_986;
        ap_reg_pp0_iter28_tmp_i_i_i_reg_980 <= ap_reg_pp0_iter27_tmp_i_i_i_reg_980;
        ap_reg_pp0_iter29_F2_2_reg_1051 <= ap_reg_pp0_iter28_F2_2_reg_1051;
        ap_reg_pp0_iter29_exitcond_i_reg_920 <= ap_reg_pp0_iter28_exitcond_i_reg_920;
        ap_reg_pp0_iter29_icmp_reg_1064 <= ap_reg_pp0_iter28_icmp_reg_1064;
        ap_reg_pp0_iter29_isneg_reg_997 <= ap_reg_pp0_iter28_isneg_reg_997;
        ap_reg_pp0_iter29_tmp_23_i_reg_1098 <= tmp_23_i_reg_1098;
        ap_reg_pp0_iter29_tmp_4_i_reg_1039 <= ap_reg_pp0_iter28_tmp_4_i_reg_1039;
        ap_reg_pp0_iter29_tmp_63_reg_1058 <= ap_reg_pp0_iter28_tmp_63_reg_1058;
        ap_reg_pp0_iter29_tmp_72_reg_1093 <= tmp_72_reg_1093;
        ap_reg_pp0_iter29_tmp_i_i_i_100_reg_986 <= ap_reg_pp0_iter28_tmp_i_i_i_100_reg_986;
        ap_reg_pp0_iter29_tmp_i_i_i_reg_980 <= ap_reg_pp0_iter28_tmp_i_i_i_reg_980;
        ap_reg_pp0_iter2_exitcond_i_reg_920 <= ap_reg_pp0_iter1_exitcond_i_reg_920;
        ap_reg_pp0_iter30_exitcond_i_reg_920 <= ap_reg_pp0_iter29_exitcond_i_reg_920;
        ap_reg_pp0_iter30_tmp_4_i_reg_1039 <= ap_reg_pp0_iter29_tmp_4_i_reg_1039;
        ap_reg_pp0_iter30_tmp_i_i_i_100_reg_986 <= ap_reg_pp0_iter29_tmp_i_i_i_100_reg_986;
        ap_reg_pp0_iter30_tmp_i_i_i_reg_980 <= ap_reg_pp0_iter29_tmp_i_i_i_reg_980;
        ap_reg_pp0_iter3_exitcond_i_reg_920 <= ap_reg_pp0_iter2_exitcond_i_reg_920;
        ap_reg_pp0_iter4_exitcond_i_reg_920 <= ap_reg_pp0_iter3_exitcond_i_reg_920;
        ap_reg_pp0_iter5_exitcond_i_reg_920 <= ap_reg_pp0_iter4_exitcond_i_reg_920;
        ap_reg_pp0_iter6_exitcond_i_reg_920 <= ap_reg_pp0_iter5_exitcond_i_reg_920;
        ap_reg_pp0_iter7_exitcond_i_reg_920 <= ap_reg_pp0_iter6_exitcond_i_reg_920;
        ap_reg_pp0_iter8_exitcond_i_reg_920 <= ap_reg_pp0_iter7_exitcond_i_reg_920;
        ap_reg_pp0_iter9_exitcond_i_reg_920 <= ap_reg_pp0_iter8_exitcond_i_reg_920;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_i_reg_920 <= exitcond_i_reg_920;
        exitcond_i_reg_920 <= exitcond_i_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_915 <= i_V_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter29_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_121_demorgan_i_i_i_reg_1190 <= p_121_demorgan_i_i_i_fu_814_p2;
        p_Val2_14_reg_1178 <= p_Val2_14_fu_680_p3;
        underflow_reg_1184 <= underflow_fu_801_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter24_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_reg_974 <= grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter10_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t1_reg_959 <= grp_fu_176_p2;
        t2_reg_964 <= grp_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_39_i_reg_949 <= grp_fu_186_p1;
        tmp_41_i_reg_954 <= grp_fu_189_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter17_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_42_i_reg_969 <= grp_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_920 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_73_reg_929 <= src1_data_stream_V_dout;
        tmp_74_reg_934 <= src2_data_stream_V_dout;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_207_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_i_fu_195_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_i_fu_195_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter30_exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n;
    end else begin
        dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter30_exitcond_i_reg_920 == 1'd0) & (ap_enable_reg_pp0_iter31 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_data_stream_V_write = 1'b1;
    end else begin
        dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_167_ce = 1'b1;
    end else begin
        grp_fu_167_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_171_ce = 1'b1;
    end else begin
        grp_fu_171_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_176_ce = 1'b1;
    end else begin
        grp_fu_176_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_181_ce = 1'b1;
    end else begin
        grp_fu_181_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_186_ce = 1'b1;
    end else begin
        grp_fu_186_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_189_ce = 1'b1;
    end else begin
        grp_fu_189_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src1_data_stream_V_blk_n = src1_data_stream_V_empty_n;
    end else begin
        src1_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_920 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src1_data_stream_V_read = 1'b1;
    end else begin
        src1_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src2_data_stream_V_blk_n = src2_data_stream_V_empty_n;
    end else begin
        src2_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_920 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src2_data_stream_V_read = 1'b1;
    end else begin
        src2_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_i_fu_195_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_i_fu_207_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter30 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter31 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter30 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((exitcond_i_fu_207_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_2_cast_i_fu_368_p1 = $signed(F2_2_reg_1051);

assign F2_2_fu_341_p3 = ((tmp_6_i1_fu_331_p2[0:0] === 1'b1) ? F2_reg_1012 : tmp_7_i2_fu_336_p2);

assign F2_fu_290_p2 = (12'd1075 - tmp_2_i_fu_282_p1);

assign Range1_all_ones_1_fu_621_p2 = (tmp_18_i_fu_592_p2 & tmp7_fu_615_p2);

assign Range1_all_ones_2_i_fu_770_p2 = (carry_1_i_i_i_reg_1131 & Range1_all_ones_2_i_s_fu_740_p3);

assign Range1_all_ones_2_i_s_fu_740_p3 = ((or_cond117_i_i_i_fu_712_p2[0:0] === 1'b1) ? Range1_all_ones_fu_716_p2 : sel_tmp35_i_fu_735_p3);

assign Range1_all_ones_fu_716_p2 = (Range2_all_ones_1_i_s_fu_705_p3 & Range1_all_ones_1_reg_1150);

assign Range1_all_zeros_1_fu_642_p2 = ((ap_reg_pp0_iter28_p_Val2_s_reg_1030 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_755_p3 = ((or_cond117_i_i_i_fu_712_p2[0:0] === 1'b1) ? p_122_i_i_i_fu_726_p2 : sel_tmp39_i_fu_748_p3);

assign Range1_all_zeros_fu_721_p2 = (1'd1 ^ Range1_all_ones_1_reg_1150);

assign Range2_V_1_fu_452_p2 = p_Val2_s_reg_1030 >> tmp_24_i_fu_448_p1;

assign Range2_all_ones_1_i_s_fu_705_p3 = ((or_cond115_i_i_i_fu_700_p2[0:0] === 1'b1) ? Range2_all_ones_reg_1157 : rev4_fu_695_p2);

assign Range2_all_ones_fu_632_p2 = ((Range2_V_1_reg_1110 == r_V_fu_627_p2) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter30_exitcond_i_reg_920 == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_920 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_920 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter30_exitcond_i_reg_920 == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_920 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_920 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter30_exitcond_i_reg_920 == 1'd0) & (dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_920 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_920 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_pp0_stage0_iter31 = ((ap_reg_pp0_iter30_exitcond_i_reg_920 == 1'd0) & (dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_i_reg_920 == 1'd0) & (src2_data_stream_V_empty_n == 1'b0)) | ((exitcond_i_reg_920 == 1'd0) & (src1_data_stream_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign brmerge_i_fu_839_p2 = (underflow_not_i_fu_824_p2 | p_121_demorgan_i_i_no_fu_834_p2);

assign brmerge_i_i_i_not_i_fu_829_p2 = (underflow_not_i_fu_824_p2 & p_121_demorgan_i_i_i_reg_1190);

assign carry_1_i_i_i_fu_583_p2 = (tmp6_fu_577_p2 & sel_tmp3_i_fu_530_p2);

assign deleted_zeros_fu_763_p3 = ((carry_1_i_i_i_reg_1131[0:0] === 1'b1) ? Range1_all_ones_2_i_s_fu_740_p3 : Range1_all_zeros_2_i_fu_755_p3);

assign dst_data_stream_V_din = ((sel_tmp56_i_fu_896_p2[0:0] === 1'b1) ? p_Val2_12_0_i_i_mux_fu_845_p3 : sel_tmp52_i_fu_878_p3);

assign exitcond1_i_fu_195_p2 = ((t_V_reg_145 == 11'd1080) ? 1'b1 : 1'b0);

assign exitcond_i_fu_207_p2 = ((t_V_5_reg_156 == 11'd1920) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_272_p4 = {{ireg_V_fu_256_p1[62:52]}};

assign grp_fu_186_p0 = tmp_73_reg_929;

assign grp_fu_189_p0 = tmp_74_reg_934;

assign i_V_fu_201_p2 = (t_V_reg_145 + 11'd1);

assign icmp_fu_362_p2 = ((tmp_64_fu_352_p4 == 9'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_256_p1 = d_assign_fu_192_p1;

assign j_V_fu_213_p2 = (t_V_5_reg_156 + 11'd1);

assign lD_fu_611_p1 = tmp_21_i_fu_606_p2[0:0];

assign loc_V_1_fu_240_p1 = p_Val2_10_fu_227_p1[22:0];

assign loc_V_fu_230_p4 = {{p_Val2_10_fu_227_p1[30:23]}};

assign man_V_1_fu_313_p2 = (54'd0 - p_Result_s_fu_309_p1);

assign newsignbit_fu_687_p3 = p_Val2_14_fu_680_p3[32'd7];

assign not_sel_tmp28_i_fu_571_p2 = (tmp_5_not_i_fu_566_p2 | sel_tmp12_demorgan_i_fu_562_p2);

assign or_cond115_i_i_i_fu_700_p2 = (rev4_fu_695_p2 & ap_reg_pp0_iter29_tmp_23_i_reg_1098);

assign or_cond117_i_i_i_fu_712_p2 = (rev_reg_1143 & ap_reg_pp0_iter29_tmp_23_i_reg_1098);

assign p_119_i_i_i_fu_731_p2 = (rev_reg_1143 | Range1_all_zeros_1_reg_1167);

assign p_121_demorgan_i_i_i_fu_814_p2 = (tmp9_fu_809_p2 | deleted_zeros_fu_763_p3);

assign p_121_demorgan_i_i_no_fu_834_p2 = (p_121_demorgan_i_i_i_reg_1190 ^ 1'd1);

assign p_122_i_i_i_fu_726_p2 = (tmp_25_i_reg_1162 & Range1_all_zeros_fu_721_p2);

assign p_Result_s_fu_309_p1 = tmp_1_i_fu_302_p3;

assign p_Val2_0_i_i_i6_i_fu_389_p3 = ((ap_reg_pp0_iter27_isneg_reg_997[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Val2_10_fu_227_p1 = sum_reg_974;

assign p_Val2_12_0_i_i_mux_fu_845_p3 = ((brmerge_i_i_i_not_i_fu_829_p2[0:0] === 1'b1) ? p_Val2_14_reg_1178 : 8'd255);

assign p_Val2_12_fu_396_p3 = ((tmp_i4_fu_371_p2[0:0] === 1'b1) ? tmp_65_fu_385_p1 : p_Val2_0_i_i_i6_i_fu_389_p3);

assign p_Val2_13_fu_495_p2 = (tmp_16_i_fu_491_p1 + p_Val2_12_reg_1070);

assign p_Val2_14_fu_680_p3 = ((sel_tmp13_i_fu_675_p2[0:0] === 1'b1) ? tmp_13_i_fu_665_p2 : sel_tmp9_i_reg_1121);

assign p_Val2_s_fu_319_p3 = ((isneg_reg_997[0:0] === 1'b1) ? man_V_1_fu_313_p2 : p_Result_s_fu_309_p1);

assign pos1_cast_i_fu_589_p1 = $signed(pos1_reg_1081);

assign pos1_fu_412_p2 = (12'd8 + ap_reg_pp0_iter27_F2_reg_1012);

assign pos2_cast_i_fu_422_p1 = $signed(pos2_fu_417_p2);

assign pos2_fu_417_p2 = (12'd9 + ap_reg_pp0_iter27_F2_reg_1012);

assign qb_fu_484_p3 = ((tmp_14_i_fu_463_p2[0:0] === 1'b1) ? ap_reg_pp0_iter28_isneg_reg_997 : tmp_66_fu_477_p3);

assign r_V_fu_627_p2 = 54'd18014398509481983 >> tmp_24_i_reg_1105;

assign rev4_fu_695_p2 = (ap_reg_pp0_iter29_tmp_72_reg_1093 ^ 1'd1);

assign rev_fu_597_p2 = (tmp_70_reg_1087 ^ 1'd1);

assign sel_tmp12_demorgan_i_fu_562_p2 = (ap_reg_pp0_iter28_tmp_8_i3_reg_1023 | ap_reg_pp0_iter28_tmp_6_i1_reg_1045);

assign sel_tmp12_i_fu_670_p2 = (sel_tmp12_demorgan_i_reg_1126 ^ 1'd1);

assign sel_tmp13_i_fu_675_p2 = (sel_tmp12_i_fu_670_p2 & ap_reg_pp0_iter29_icmp_reg_1064);

assign sel_tmp1_i_fu_520_p2 = (ap_reg_pp0_iter28_tmp_8_i3_reg_1023 ^ 1'd1);

assign sel_tmp2_i_fu_525_p2 = (sel_tmp1_i_fu_520_p2 & ap_reg_pp0_iter28_tmp_6_i1_reg_1045);

assign sel_tmp33_i_fu_652_p2 = (tmp_70_reg_1087 | tmp_23_i_not_fu_647_p2);

assign sel_tmp34_i_fu_657_p2 = (tmp_27_i_reg_1116 & sel_tmp33_i_fu_652_p2);

assign sel_tmp35_i_fu_735_p3 = ((sel_tmp34_i_reg_1172[0:0] === 1'b1) ? Range1_all_ones_1_reg_1150 : rev_reg_1143);

assign sel_tmp39_i_fu_748_p3 = ((sel_tmp34_i_reg_1172[0:0] === 1'b1) ? Range1_all_zeros_fu_721_p2 : p_119_i_i_i_fu_731_p2);

assign sel_tmp3_i_fu_530_p2 = (tmp_67_reg_1075 & sel_tmp2_i_fu_525_p2);

assign sel_tmp41_i_fu_781_p2 = (tmp_18_i_reg_1137 ^ 1'd1);

assign sel_tmp46_i_fu_792_p2 = (tmp8_fu_786_p2 & ap_reg_pp0_iter29_isneg_reg_997);

assign sel_tmp47_i_fu_797_p2 = (tmp_18_i_reg_1137 & ap_reg_pp0_iter29_isneg_reg_997);

assign sel_tmp4_i_fu_535_p3 = ((sel_tmp3_i_fu_530_p2[0:0] === 1'b1) ? p_Val2_13_fu_495_p2 : sel_tmp_i_fu_514_p3);

assign sel_tmp50_i_demorgan_fu_852_p2 = (ap_reg_pp0_iter30_tmp_i_i_i_reg_980 & ap_reg_pp0_iter30_tmp_i_i_i_100_reg_986);

assign sel_tmp50_i_fu_856_p2 = (sel_tmp50_i_demorgan_fu_852_p2 ^ 1'd1);

assign sel_tmp51_i_fu_862_p2 = (sel_tmp50_i_fu_856_p2 & ap_reg_pp0_iter30_tmp_4_i_reg_1039);

assign sel_tmp52_i_fu_878_p3 = ((tmp_30_fu_873_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_14_reg_1178);

assign sel_tmp55_demorgan_i_fu_885_p2 = (tmp_demorgan_i_fu_820_p2 | ap_reg_pp0_iter30_tmp_4_i_reg_1039);

assign sel_tmp55_i_fu_890_p2 = (sel_tmp55_demorgan_i_fu_885_p2 ^ 1'd1);

assign sel_tmp56_i_fu_896_p2 = (sel_tmp55_i_fu_890_p2 & brmerge_i_fu_839_p2);

assign sel_tmp7_i_fu_543_p2 = (tmp_67_reg_1075 ^ 1'd1);

assign sel_tmp8_i_fu_548_p2 = (sel_tmp7_i_fu_543_p2 & sel_tmp2_i_fu_525_p2);

assign sel_tmp9_i_fu_554_p3 = ((sel_tmp8_i_fu_548_p2[0:0] === 1'b1) ? p_Val2_13_fu_495_p2 : sel_tmp4_i_fu_535_p3);

assign sel_tmp_i_fu_514_p3 = ((ap_reg_pp0_iter28_tmp_8_i3_reg_1023[0:0] === 1'b1) ? ap_reg_pp0_iter28_tmp_63_reg_1058 : 8'd0);

assign tmp6_fu_577_p2 = (tmp_17_i_fu_508_p2 & not_sel_tmp28_i_fu_571_p2);

assign tmp7_fu_615_p2 = (rev_fu_597_p2 & lD_fu_611_p1);

assign tmp8_fu_786_p2 = (sel_tmp41_i_fu_781_p2 & newsignbit_fu_687_p3);

assign tmp9_fu_809_p2 = (sel_tmp41_i_fu_781_p2 | ap_reg_pp0_iter29_isneg_reg_997);

assign tmp_10_i_fu_376_p1 = $unsigned(F2_2_cast_i_fu_368_p1);

assign tmp_11_i_fu_380_p2 = $signed(p_Val2_s_reg_1030) >>> tmp_10_i_fu_376_p1;

assign tmp_13_i_fu_665_p2 = ap_reg_pp0_iter29_tmp_63_reg_1058 << tmp_62_fu_662_p1;

assign tmp_14_i_fu_463_p2 = (($signed(ap_reg_pp0_iter28_F2_reg_1012) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_15_i_fu_468_p2 = ($signed(12'd4095) + $signed(ap_reg_pp0_iter28_F2_reg_1012));

assign tmp_16_i_fu_491_p1 = qb_fu_484_p3;

assign tmp_17_i_fu_508_p2 = (tmp_68_fu_500_p3 ^ 1'd1);

assign tmp_18_i_fu_592_p2 = (($signed(pos1_reg_1081) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_302_p3 = {{1'd1}, {tmp_61_reg_1007}};

assign tmp_20_cast_i_fu_473_p1 = tmp_15_i_fu_468_p2;

assign tmp_20_i_fu_602_p1 = $unsigned(pos1_cast_i_fu_589_p1);

assign tmp_21_i_fu_606_p2 = $signed(ap_reg_pp0_iter28_p_Val2_s_reg_1030) >>> tmp_20_i_fu_602_p1;

assign tmp_23_i_fu_442_p2 = (($signed(pos2_fu_417_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_23_i_not_fu_647_p2 = (tmp_23_i_reg_1098 ^ 1'd1);

assign tmp_24_i_fu_448_p1 = $unsigned(pos2_cast_i_fu_422_p1);

assign tmp_25_i_fu_637_p2 = ((Range2_V_1_reg_1110 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_27_i_fu_457_p2 = ((pos2_fu_417_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_28_i_fu_775_p2 = (1'd1 ^ Range1_all_ones_2_i_fu_770_p2);

assign tmp_2_i_fu_282_p1 = exp_tmp_V_fu_272_p4;

assign tmp_30_fu_873_p2 = (underflow_reg_1184 | tmp_s_fu_867_p2);

assign tmp_4_i_fu_326_p2 = ((tmp_reg_992 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_5_not_i_fu_566_p2 = (ap_reg_pp0_iter28_icmp_reg_1064 ^ 1'd1);

assign tmp_61_fu_286_p1 = ireg_V_fu_256_p1[51:0];

assign tmp_62_fu_662_p1 = ap_reg_pp0_iter29_F2_2_reg_1051[7:0];

assign tmp_63_fu_348_p1 = p_Val2_s_fu_319_p3[7:0];

assign tmp_64_fu_352_p4 = {{F2_2_fu_341_p3[11:3]}};

assign tmp_65_fu_385_p1 = tmp_11_i_fu_380_p2[7:0];

assign tmp_66_fu_477_p3 = ap_reg_pp0_iter28_p_Val2_s_reg_1030[tmp_20_cast_i_fu_473_p1];

assign tmp_68_fu_500_p3 = p_Val2_13_fu_495_p2[32'd7];

assign tmp_6_i1_fu_331_p2 = (($signed(F2_reg_1012) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_7_i2_fu_336_p2 = (12'd0 - F2_reg_1012);

assign tmp_8_i3_fu_296_p2 = ((exp_tmp_V_fu_272_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_demorgan_i_fu_820_p2 = (ap_reg_pp0_iter30_tmp_i_i_i_reg_980 & ap_reg_pp0_iter30_tmp_i_i_i_100_reg_986);

assign tmp_fu_260_p1 = ireg_V_fu_256_p1[62:0];

assign tmp_i4_fu_371_p2 = ((F2_2_reg_1051 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_i_i_i_100_fu_250_p2 = ((loc_V_1_fu_240_p1 != 23'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_fu_244_p2 = ((loc_V_fu_230_p4 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_s_fu_867_p2 = (tmp_demorgan_i_fu_820_p2 | sel_tmp51_i_fu_862_p2);

assign underflow_fu_801_p3 = ((sel_tmp47_i_fu_797_p2[0:0] === 1'b1) ? tmp_28_i_fu_775_p2 : sel_tmp46_i_fu_792_p2);

assign underflow_not_i_fu_824_p2 = (underflow_reg_1184 ^ 1'd1);

always @ (posedge ap_clk) begin
    tmp_24_i_reg_1105[53:32] <= 22'b0000000000000000000000;
end

endmodule //AddWeighted
